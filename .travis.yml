language: cpp
matrix:
  include:
  - os: linux
    env: PYTHON=2.7
    dist: xenial
  - os: linux
    env: PYTHON=3.7
    dist: xenial
  - os: linux
    env: CONDA=2.7
    dist: xenial
  - os: linux
    env: CONDA=3.7
    dist: xenial
  - os: osx
    env: PYTHON=2.7
    # osx_image: xcode8.3
  - os: osx
    env: PYTHON=3.7
    # osx_image: xcode8.3
  - os: osx
    env: CONDA=2.7
    # osx_image: xcode8.3
  - os: osx
    env: CONDA=3.7
    # osx_image: xcode8.3
before_install:
  ### LINUX
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get install --no-install-recommends -y libeigen3-dev libboost1.58-dev; fi
  ### OSX
  - if [ $TRAVIS_OS_NAME == osx ]; then brew update; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then brew install eigen doxygen graphviz; fi

  - |
    if [ -n "$PYTHON" ]; then
      if [ "$TRAVIS_OS_NAME" = "osx" ]; then
        export PATH="/Users/travis/Library/Python/2.7/bin:$PATH"
        if [ "${PYTHON:0:1}" = "3" ]; then
          brew install python3;
        fi
      fi
      python -m pip install --user virtualenv pytest
      virtualenv -p python${PYTHON:0:1} venv
      source venv/bin/activate
    elif [ -n "$CONDA" ]; then
      if [ "$TRAVIS_OS_NAME" = "linux" ]; then OS=Linux-x86_64; else OS=MacOSX-x86_64; fi
      wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda${CONDA:0:1}-latest-$OS.sh
      bash miniconda.sh -b -p $HOME/miniconda
      export PATH="$HOME/miniconda/bin:$PATH"
      conda config --set always_yes yes --set changeps1 no
      conda config --add channels conda-forge
      conda update -q conda
      conda install -q conda-build
    fi
install:
  - |
    if [ -n "$PYTHON" ]; then
      python setup.py sdist
      python -m pip install --verbose dist/*.tar.gz
    elif [ -n "$CONDA" ]; then
      conda build -q conda.recipe --python=$CONDA --output-folder=build
      conda config --add channels "file://`pwd`/build"
      conda create -q -n test-environment python=$CONDA pyvinecopulib pytest
      source activate test-environment
      conda info --envs
    fi
script:
  - |
    if [ -n "$PYTHON" ]; then
      python -m pip install pytest
    else 
      conda info --envs
    fi
    python -m pytest tests -r a
  - |
    PYTHON_VERSION=$(python --version)
    if [ "${PYTHON_VERSION:7:1}" = "3" ]; then
      pip install nbconvert jupyter_client ipykernel
      python -m ipykernel install --user
      for i in examples/*.ipynb; do 
        jupyter nbconvert --to markdown --execute --stdout $i > $i.md.travis; 
        diff $i.md.repo $i.md.travis
      done;
    fi
