Search.setIndex({"alltitles": {"0.7.0": [[0, "id2"]], "0.7.1": [[0, "id1"]], "A first vine copula": [[112, "A-first-vine-copula"]], "API Documentation": [[116, null]], "BUG FIXES": [[0, "bug-fixes"]], "Benchmarking performance": [[115, null]], "Bicop": [[2, null]], "Bicop.__init__": [[3, null]], "Bicop.aic": [[4, null]], "Bicop.bic": [[5, null]], "Bicop.cdf": [[6, null]], "Bicop.fit": [[7, null]], "Bicop.from_data": [[8, null]], "Bicop.from_family": [[9, null]], "Bicop.from_file": [[10, null]], "Bicop.from_json": [[11, null]], "Bicop.hfunc1": [[12, null]], "Bicop.hfunc2": [[13, null]], "Bicop.hinv1": [[14, null]], "Bicop.hinv2": [[15, null]], "Bicop.loglik": [[16, null]], "Bicop.mbic": [[17, null]], "Bicop.parameters_to_tau": [[18, null]], "Bicop.pdf": [[19, null]], "Bicop.plot": [[20, null]], "Bicop.select": [[21, null]], "Bicop.simulate": [[22, null]], "Bicop.str": [[23, null]], "Bicop.tau_to_parameters": [[24, null]], "Bicop.to_file": [[25, null]], "Bicop.to_json": [[26, null]], "BicopFamily": [[27, null]], "Bivariate copula benchmark": [[115, "Bivariate-copula-benchmark"]], "Breaking API changes in pyvinecopulib": [[0, "breaking-api-changes-in-pyvinecopulib"]], "Bug fixes": [[0, "id6"]], "Bug fixes in pyvinecopulib": [[0, "bug-fixes-in-pyvinecopulib"], [0, "id4"]], "Building the documentation": [[1, "building-the-documentation"], [117, "building-the-documentation"]], "C-vine structures": [[112, "C-vine-structures"]], "CVineStructure": [[28, null]], "CVineStructure.__init__": [[29, null]], "CVineStructure.from_dimension": [[30, null]], "CVineStructure.from_file": [[31, null]], "CVineStructure.from_json": [[32, null]], "CVineStructure.from_matrix": [[33, null]], "CVineStructure.from_order": [[34, null]], "CVineStructure.min_array": [[35, null]], "CVineStructure.needed_hfunc1": [[36, null]], "CVineStructure.needed_hfunc2": [[37, null]], "CVineStructure.simulate": [[38, null]], "CVineStructure.str": [[39, null]], "CVineStructure.struct_array": [[40, null]], "CVineStructure.to_file": [[41, null]], "CVineStructure.to_json": [[42, null]], "CVineStructure.truncate": [[43, null]], "Changelog": [[0, null]], "Changes in vinecopulib": [[0, "changes-in-vinecopulib"]], "Changes in vinecopulib version 0.7.1": [[0, "changes-in-vinecopulib-version-0-7-1"]], "Classes": [[116, "classes"]], "Contact": [[1, "contact"], [117, "contact"]], "Create an independence bivariate copula": [[111, "Create-an-independence-bivariate-copula"]], "Create and plot a Gaussian copula": [[111, "Create-and-plot-a-Gaussian-copula"]], "DVineStructure": [[44, null]], "DVineStructure.__init__": [[45, null]], "DVineStructure.from_dimension": [[46, null]], "DVineStructure.from_file": [[47, null]], "DVineStructure.from_json": [[48, null]], "DVineStructure.from_matrix": [[49, null]], "DVineStructure.from_order": [[50, null]], "DVineStructure.min_array": [[51, null]], "DVineStructure.needed_hfunc1": [[52, null]], "DVineStructure.needed_hfunc2": [[53, null]], "DVineStructure.simulate": [[54, null]], "DVineStructure.str": [[55, null]], "DVineStructure.struct_array": [[56, null]], "DVineStructure.to_file": [[57, null]], "DVineStructure.to_json": [[58, null]], "DVineStructure.truncate": [[59, null]], "Different ways to fit a copula (when the families and structure are known)\u2026": [[112, "Different-ways-to-fit-a-copula-(when-the-families-and-structure-are-known)..."]], "Different ways to fit a copula\u2026": [[111, "Different-ways-to-fit-a-copula..."]], "Examples": [[110, null]], "Fit a continuous model": [[114, "Fit-a-continuous-model"]], "Fit a model": [[113, "Fit-a-model"]], "FitControlsBicop": [[60, null]], "FitControlsBicop.__init__": [[61, null]], "FitControlsBicop.str": [[62, null]], "FitControlsVinecop": [[63, null]], "FitControlsVinecop.__init__": [[64, null]], "FitControlsVinecop.str": [[65, null]], "Fitting a vine copula on dataset and sampling from the model": [[113, null]], "From source": [[1, "from-source"], [117, "from-source"]], "Functions": [[116, "functions"]], "Import the libraries": [[112, "Import-the-libraries"]], "Import the library": [[111, "Import-the-library"]], "Import the required libraries": [[113, "Import-the-required-libraries"], [114, "Import-the-required-libraries"], [115, "Import-the-required-libraries"]], "Installation": [[1, "installation"], [117, "installation"]], "Introduction": [[1, "introduction"]], "Introduction to the bivariate copula (Bicop) API": [[111, null]], "Introduction to the vine copula (Vinecop) API": [[112, null]], "License": [[1, "license"], [117, "license"]], "Model for discrete data : transform to Poisson margins": [[114, "Model-for-discrete-data-:-transform-to-Poisson-margins"]], "Model for mixed data: only the first variable is transformed to a Poisson margin": [[114, "Model-for-mixed-data:-only-the-first-variable-is-transformed-to-a-Poisson-margin"]], "NEW FEATURES": [[0, "new-features"]], "New features": [[0, "id5"]], "New features in pyvinecopulib": [[0, "new-features-in-pyvinecopulib"], [0, "id3"]], "RVineStructure": [[66, null]], "RVineStructure.__init__": [[67, null]], "RVineStructure.from_dimension": [[68, null]], "RVineStructure.from_file": [[69, null]], "RVineStructure.from_json": [[70, null]], "RVineStructure.from_matrix": [[71, null]], "RVineStructure.from_order": [[72, null]], "RVineStructure.min_array": [[73, null]], "RVineStructure.needed_hfunc1": [[74, null]], "RVineStructure.needed_hfunc2": [[75, null]], "RVineStructure.simulate": [[76, null]], "RVineStructure.str": [[77, null]], "RVineStructure.struct_array": [[78, null]], "RVineStructure.to_file": [[79, null]], "RVineStructure.to_json": [[80, null]], "RVineStructure.truncate": [[81, null]], "Sample from the model": [[113, "Sample-from-the-model"]], "Set the parameters for the benchmark": [[115, "Set-the-parameters-for-the-benchmark"]], "Showcase some methods": [[112, "Showcase-some-methods"]], "Similarly, when the family is unkown, there are two ways to also do model selection\u2026": [[111, "Similarly,-when-the-family-is-unkown,-there-are-two-ways-to-also-do-model-selection..."]], "Simulate dummy data and convert to pseudo-observations": [[114, "Simulate-dummy-data-and-convert-to-pseudo-observations"]], "Simulate some data": [[113, "Simulate-some-data"]], "Some other families": [[111, "Some-other-families"]], "Vine copula benchmark": [[115, "Vine-copula-benchmark"]], "Vine copulas for discrete variables": [[114, null]], "Vinecop": [[82, null]], "Vinecop.__init__": [[83, null]], "Vinecop.aic": [[84, null]], "Vinecop.bic": [[85, null]], "Vinecop.cdf": [[86, null]], "Vinecop.fit": [[87, null]], "Vinecop.from_data": [[88, null]], "Vinecop.from_dimension": [[89, null]], "Vinecop.from_file": [[90, null]], "Vinecop.from_json": [[91, null]], "Vinecop.from_structure": [[92, null]], "Vinecop.get_family": [[93, null]], "Vinecop.get_pair_copula": [[94, null]], "Vinecop.get_parameters": [[95, null]], "Vinecop.get_rotation": [[96, null]], "Vinecop.get_tau": [[97, null]], "Vinecop.inverse_rosenblatt": [[98, null]], "Vinecop.loglik": [[99, null]], "Vinecop.mbicv": [[100, null]], "Vinecop.pdf": [[101, null]], "Vinecop.plot": [[102, null]], "Vinecop.rosenblatt": [[103, null]], "Vinecop.select": [[104, null]], "Vinecop.simulate": [[105, null]], "Vinecop.str": [[106, null]], "Vinecop.to_file": [[107, null]], "Vinecop.to_json": [[108, null]], "Vinecop.truncate": [[109, null]], "What are vine copulas?": [[1, "what-are-vine-copulas"], [117, "what-are-vine-copulas"]], "What is pyvinecopulib?": [[1, "what-is-pyvinecopulib"], [117, "what-is-pyvinecopulib"]], "When nothing is known, there are also two ways to fit a copula\u2026": [[112, "When-nothing-is-known,-there-are-also-two-ways-to-fit-a-copula..."]], "With conda": [[1, "with-conda"], [117, "with-conda"]], "With pip": [[1, "with-pip"], [117, "with-pip"]], "pyvinecopulib": [[1, null], [117, null]]}, "docnames": ["CHANGELOG", "README", "_generate/pyvinecopulib.Bicop", "_generate/pyvinecopulib.Bicop.__init__", "_generate/pyvinecopulib.Bicop.aic", "_generate/pyvinecopulib.Bicop.bic", "_generate/pyvinecopulib.Bicop.cdf", "_generate/pyvinecopulib.Bicop.fit", "_generate/pyvinecopulib.Bicop.from_data", "_generate/pyvinecopulib.Bicop.from_family", "_generate/pyvinecopulib.Bicop.from_file", "_generate/pyvinecopulib.Bicop.from_json", "_generate/pyvinecopulib.Bicop.hfunc1", "_generate/pyvinecopulib.Bicop.hfunc2", "_generate/pyvinecopulib.Bicop.hinv1", "_generate/pyvinecopulib.Bicop.hinv2", "_generate/pyvinecopulib.Bicop.loglik", "_generate/pyvinecopulib.Bicop.mbic", "_generate/pyvinecopulib.Bicop.parameters_to_tau", "_generate/pyvinecopulib.Bicop.pdf", "_generate/pyvinecopulib.Bicop.plot", "_generate/pyvinecopulib.Bicop.select", "_generate/pyvinecopulib.Bicop.simulate", "_generate/pyvinecopulib.Bicop.str", "_generate/pyvinecopulib.Bicop.tau_to_parameters", "_generate/pyvinecopulib.Bicop.to_file", "_generate/pyvinecopulib.Bicop.to_json", "_generate/pyvinecopulib.BicopFamily", "_generate/pyvinecopulib.CVineStructure", "_generate/pyvinecopulib.CVineStructure.__init__", "_generate/pyvinecopulib.CVineStructure.from_dimension", "_generate/pyvinecopulib.CVineStructure.from_file", "_generate/pyvinecopulib.CVineStructure.from_json", "_generate/pyvinecopulib.CVineStructure.from_matrix", "_generate/pyvinecopulib.CVineStructure.from_order", "_generate/pyvinecopulib.CVineStructure.min_array", "_generate/pyvinecopulib.CVineStructure.needed_hfunc1", "_generate/pyvinecopulib.CVineStructure.needed_hfunc2", "_generate/pyvinecopulib.CVineStructure.simulate", "_generate/pyvinecopulib.CVineStructure.str", "_generate/pyvinecopulib.CVineStructure.struct_array", "_generate/pyvinecopulib.CVineStructure.to_file", "_generate/pyvinecopulib.CVineStructure.to_json", "_generate/pyvinecopulib.CVineStructure.truncate", "_generate/pyvinecopulib.DVineStructure", "_generate/pyvinecopulib.DVineStructure.__init__", "_generate/pyvinecopulib.DVineStructure.from_dimension", "_generate/pyvinecopulib.DVineStructure.from_file", "_generate/pyvinecopulib.DVineStructure.from_json", "_generate/pyvinecopulib.DVineStructure.from_matrix", "_generate/pyvinecopulib.DVineStructure.from_order", "_generate/pyvinecopulib.DVineStructure.min_array", "_generate/pyvinecopulib.DVineStructure.needed_hfunc1", "_generate/pyvinecopulib.DVineStructure.needed_hfunc2", "_generate/pyvinecopulib.DVineStructure.simulate", "_generate/pyvinecopulib.DVineStructure.str", "_generate/pyvinecopulib.DVineStructure.struct_array", "_generate/pyvinecopulib.DVineStructure.to_file", "_generate/pyvinecopulib.DVineStructure.to_json", "_generate/pyvinecopulib.DVineStructure.truncate", "_generate/pyvinecopulib.FitControlsBicop", "_generate/pyvinecopulib.FitControlsBicop.__init__", "_generate/pyvinecopulib.FitControlsBicop.str", "_generate/pyvinecopulib.FitControlsVinecop", "_generate/pyvinecopulib.FitControlsVinecop.__init__", "_generate/pyvinecopulib.FitControlsVinecop.str", "_generate/pyvinecopulib.RVineStructure", "_generate/pyvinecopulib.RVineStructure.__init__", "_generate/pyvinecopulib.RVineStructure.from_dimension", "_generate/pyvinecopulib.RVineStructure.from_file", "_generate/pyvinecopulib.RVineStructure.from_json", "_generate/pyvinecopulib.RVineStructure.from_matrix", "_generate/pyvinecopulib.RVineStructure.from_order", "_generate/pyvinecopulib.RVineStructure.min_array", "_generate/pyvinecopulib.RVineStructure.needed_hfunc1", "_generate/pyvinecopulib.RVineStructure.needed_hfunc2", "_generate/pyvinecopulib.RVineStructure.simulate", "_generate/pyvinecopulib.RVineStructure.str", "_generate/pyvinecopulib.RVineStructure.struct_array", "_generate/pyvinecopulib.RVineStructure.to_file", "_generate/pyvinecopulib.RVineStructure.to_json", "_generate/pyvinecopulib.RVineStructure.truncate", "_generate/pyvinecopulib.Vinecop", "_generate/pyvinecopulib.Vinecop.__init__", "_generate/pyvinecopulib.Vinecop.aic", "_generate/pyvinecopulib.Vinecop.bic", "_generate/pyvinecopulib.Vinecop.cdf", "_generate/pyvinecopulib.Vinecop.fit", "_generate/pyvinecopulib.Vinecop.from_data", "_generate/pyvinecopulib.Vinecop.from_dimension", "_generate/pyvinecopulib.Vinecop.from_file", "_generate/pyvinecopulib.Vinecop.from_json", "_generate/pyvinecopulib.Vinecop.from_structure", "_generate/pyvinecopulib.Vinecop.get_family", "_generate/pyvinecopulib.Vinecop.get_pair_copula", "_generate/pyvinecopulib.Vinecop.get_parameters", "_generate/pyvinecopulib.Vinecop.get_rotation", "_generate/pyvinecopulib.Vinecop.get_tau", "_generate/pyvinecopulib.Vinecop.inverse_rosenblatt", "_generate/pyvinecopulib.Vinecop.loglik", "_generate/pyvinecopulib.Vinecop.mbicv", "_generate/pyvinecopulib.Vinecop.pdf", "_generate/pyvinecopulib.Vinecop.plot", "_generate/pyvinecopulib.Vinecop.rosenblatt", "_generate/pyvinecopulib.Vinecop.select", "_generate/pyvinecopulib.Vinecop.simulate", "_generate/pyvinecopulib.Vinecop.str", "_generate/pyvinecopulib.Vinecop.to_file", "_generate/pyvinecopulib.Vinecop.to_json", "_generate/pyvinecopulib.Vinecop.truncate", "examples", "examples/01_bivariate_copulas", "examples/02_vine_copulas", "examples/03_vine_copulas_fit_sample", "examples/04_discrete_variables", "examples/05_benchmark", "features", "index"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["CHANGELOG.md", "README.md", "_generate/pyvinecopulib.Bicop.rst", "_generate/pyvinecopulib.Bicop.__init__.rst", "_generate/pyvinecopulib.Bicop.aic.rst", "_generate/pyvinecopulib.Bicop.bic.rst", "_generate/pyvinecopulib.Bicop.cdf.rst", "_generate/pyvinecopulib.Bicop.fit.rst", "_generate/pyvinecopulib.Bicop.from_data.rst", "_generate/pyvinecopulib.Bicop.from_family.rst", "_generate/pyvinecopulib.Bicop.from_file.rst", "_generate/pyvinecopulib.Bicop.from_json.rst", "_generate/pyvinecopulib.Bicop.hfunc1.rst", "_generate/pyvinecopulib.Bicop.hfunc2.rst", "_generate/pyvinecopulib.Bicop.hinv1.rst", "_generate/pyvinecopulib.Bicop.hinv2.rst", "_generate/pyvinecopulib.Bicop.loglik.rst", "_generate/pyvinecopulib.Bicop.mbic.rst", "_generate/pyvinecopulib.Bicop.parameters_to_tau.rst", "_generate/pyvinecopulib.Bicop.pdf.rst", "_generate/pyvinecopulib.Bicop.plot.rst", "_generate/pyvinecopulib.Bicop.select.rst", "_generate/pyvinecopulib.Bicop.simulate.rst", "_generate/pyvinecopulib.Bicop.str.rst", "_generate/pyvinecopulib.Bicop.tau_to_parameters.rst", "_generate/pyvinecopulib.Bicop.to_file.rst", "_generate/pyvinecopulib.Bicop.to_json.rst", "_generate/pyvinecopulib.BicopFamily.rst", "_generate/pyvinecopulib.CVineStructure.rst", "_generate/pyvinecopulib.CVineStructure.__init__.rst", "_generate/pyvinecopulib.CVineStructure.from_dimension.rst", "_generate/pyvinecopulib.CVineStructure.from_file.rst", "_generate/pyvinecopulib.CVineStructure.from_json.rst", "_generate/pyvinecopulib.CVineStructure.from_matrix.rst", "_generate/pyvinecopulib.CVineStructure.from_order.rst", "_generate/pyvinecopulib.CVineStructure.min_array.rst", "_generate/pyvinecopulib.CVineStructure.needed_hfunc1.rst", "_generate/pyvinecopulib.CVineStructure.needed_hfunc2.rst", "_generate/pyvinecopulib.CVineStructure.simulate.rst", "_generate/pyvinecopulib.CVineStructure.str.rst", "_generate/pyvinecopulib.CVineStructure.struct_array.rst", "_generate/pyvinecopulib.CVineStructure.to_file.rst", "_generate/pyvinecopulib.CVineStructure.to_json.rst", "_generate/pyvinecopulib.CVineStructure.truncate.rst", "_generate/pyvinecopulib.DVineStructure.rst", "_generate/pyvinecopulib.DVineStructure.__init__.rst", "_generate/pyvinecopulib.DVineStructure.from_dimension.rst", "_generate/pyvinecopulib.DVineStructure.from_file.rst", "_generate/pyvinecopulib.DVineStructure.from_json.rst", "_generate/pyvinecopulib.DVineStructure.from_matrix.rst", "_generate/pyvinecopulib.DVineStructure.from_order.rst", "_generate/pyvinecopulib.DVineStructure.min_array.rst", "_generate/pyvinecopulib.DVineStructure.needed_hfunc1.rst", "_generate/pyvinecopulib.DVineStructure.needed_hfunc2.rst", "_generate/pyvinecopulib.DVineStructure.simulate.rst", "_generate/pyvinecopulib.DVineStructure.str.rst", "_generate/pyvinecopulib.DVineStructure.struct_array.rst", "_generate/pyvinecopulib.DVineStructure.to_file.rst", "_generate/pyvinecopulib.DVineStructure.to_json.rst", "_generate/pyvinecopulib.DVineStructure.truncate.rst", "_generate/pyvinecopulib.FitControlsBicop.rst", "_generate/pyvinecopulib.FitControlsBicop.__init__.rst", "_generate/pyvinecopulib.FitControlsBicop.str.rst", "_generate/pyvinecopulib.FitControlsVinecop.rst", "_generate/pyvinecopulib.FitControlsVinecop.__init__.rst", "_generate/pyvinecopulib.FitControlsVinecop.str.rst", "_generate/pyvinecopulib.RVineStructure.rst", "_generate/pyvinecopulib.RVineStructure.__init__.rst", "_generate/pyvinecopulib.RVineStructure.from_dimension.rst", "_generate/pyvinecopulib.RVineStructure.from_file.rst", "_generate/pyvinecopulib.RVineStructure.from_json.rst", "_generate/pyvinecopulib.RVineStructure.from_matrix.rst", "_generate/pyvinecopulib.RVineStructure.from_order.rst", "_generate/pyvinecopulib.RVineStructure.min_array.rst", "_generate/pyvinecopulib.RVineStructure.needed_hfunc1.rst", "_generate/pyvinecopulib.RVineStructure.needed_hfunc2.rst", "_generate/pyvinecopulib.RVineStructure.simulate.rst", "_generate/pyvinecopulib.RVineStructure.str.rst", "_generate/pyvinecopulib.RVineStructure.struct_array.rst", "_generate/pyvinecopulib.RVineStructure.to_file.rst", "_generate/pyvinecopulib.RVineStructure.to_json.rst", "_generate/pyvinecopulib.RVineStructure.truncate.rst", "_generate/pyvinecopulib.Vinecop.rst", "_generate/pyvinecopulib.Vinecop.__init__.rst", "_generate/pyvinecopulib.Vinecop.aic.rst", "_generate/pyvinecopulib.Vinecop.bic.rst", "_generate/pyvinecopulib.Vinecop.cdf.rst", "_generate/pyvinecopulib.Vinecop.fit.rst", "_generate/pyvinecopulib.Vinecop.from_data.rst", "_generate/pyvinecopulib.Vinecop.from_dimension.rst", "_generate/pyvinecopulib.Vinecop.from_file.rst", "_generate/pyvinecopulib.Vinecop.from_json.rst", "_generate/pyvinecopulib.Vinecop.from_structure.rst", "_generate/pyvinecopulib.Vinecop.get_family.rst", "_generate/pyvinecopulib.Vinecop.get_pair_copula.rst", "_generate/pyvinecopulib.Vinecop.get_parameters.rst", "_generate/pyvinecopulib.Vinecop.get_rotation.rst", "_generate/pyvinecopulib.Vinecop.get_tau.rst", "_generate/pyvinecopulib.Vinecop.inverse_rosenblatt.rst", "_generate/pyvinecopulib.Vinecop.loglik.rst", "_generate/pyvinecopulib.Vinecop.mbicv.rst", "_generate/pyvinecopulib.Vinecop.pdf.rst", "_generate/pyvinecopulib.Vinecop.plot.rst", "_generate/pyvinecopulib.Vinecop.rosenblatt.rst", "_generate/pyvinecopulib.Vinecop.select.rst", "_generate/pyvinecopulib.Vinecop.simulate.rst", "_generate/pyvinecopulib.Vinecop.str.rst", "_generate/pyvinecopulib.Vinecop.to_file.rst", "_generate/pyvinecopulib.Vinecop.to_json.rst", "_generate/pyvinecopulib.Vinecop.truncate.rst", "examples.rst", "examples/01_bivariate_copulas.ipynb", "examples/02_vine_copulas.ipynb", "examples/03_vine_copulas_fit_sample.ipynb", "examples/04_discrete_variables.ipynb", "examples/05_benchmark.ipynb", "features.rst", "index.rst"], "indexentries": {"__init__() (bicop method)": [[3, "pyvinecopulib.Bicop.__init__", false]], "__init__() (cvinestructure method)": [[29, "pyvinecopulib.CVineStructure.__init__", false]], "__init__() (dvinestructure method)": [[45, "pyvinecopulib.DVineStructure.__init__", false]], "__init__() (fitcontrolsbicop method)": [[61, "pyvinecopulib.FitControlsBicop.__init__", false]], "__init__() (fitcontrolsvinecop method)": [[64, "pyvinecopulib.FitControlsVinecop.__init__", false]], "__init__() (rvinestructure method)": [[67, "pyvinecopulib.RVineStructure.__init__", false]], "__init__() (vinecop method)": [[83, "pyvinecopulib.Vinecop.__init__", false]], "aic() (bicop method)": [[4, "pyvinecopulib.Bicop.aic", false]], "aic() (vinecop method)": [[84, "pyvinecopulib.Vinecop.aic", false]], "bic() (bicop method)": [[5, "pyvinecopulib.Bicop.bic", false]], "bic() (vinecop method)": [[85, "pyvinecopulib.Vinecop.bic", false]], "bicop (class in pyvinecopulib)": [[2, "pyvinecopulib.Bicop", false]], "bicopfamily (class in pyvinecopulib)": [[27, "pyvinecopulib.BicopFamily", false]], "cdf() (bicop method)": [[6, "pyvinecopulib.Bicop.cdf", false]], "cdf() (vinecop method)": [[86, "pyvinecopulib.Vinecop.cdf", false]], "cvinestructure (class in pyvinecopulib)": [[28, "pyvinecopulib.CVineStructure", false]], "dvinestructure (class in pyvinecopulib)": [[44, "pyvinecopulib.DVineStructure", false]], "fit() (bicop method)": [[7, "pyvinecopulib.Bicop.fit", false]], "fit() (vinecop method)": [[87, "pyvinecopulib.Vinecop.fit", false]], "fitcontrolsbicop (class in pyvinecopulib)": [[60, "pyvinecopulib.FitControlsBicop", false]], "fitcontrolsvinecop (class in pyvinecopulib)": [[63, "pyvinecopulib.FitControlsVinecop", false]], "from_data() (bicop method)": [[8, "pyvinecopulib.Bicop.from_data", false]], "from_data() (vinecop method)": [[88, "pyvinecopulib.Vinecop.from_data", false]], "from_dimension() (cvinestructure method)": [[30, "pyvinecopulib.CVineStructure.from_dimension", false]], "from_dimension() (dvinestructure method)": [[46, "pyvinecopulib.DVineStructure.from_dimension", false]], "from_dimension() (rvinestructure method)": [[68, "pyvinecopulib.RVineStructure.from_dimension", false]], "from_dimension() (vinecop method)": [[89, "pyvinecopulib.Vinecop.from_dimension", false]], "from_family() (bicop method)": [[9, "pyvinecopulib.Bicop.from_family", false]], "from_file() (bicop method)": [[10, "pyvinecopulib.Bicop.from_file", false]], "from_file() (cvinestructure method)": [[31, "pyvinecopulib.CVineStructure.from_file", false]], "from_file() (dvinestructure method)": [[47, "pyvinecopulib.DVineStructure.from_file", false]], "from_file() (rvinestructure method)": [[69, "pyvinecopulib.RVineStructure.from_file", false]], "from_file() (vinecop method)": [[90, "pyvinecopulib.Vinecop.from_file", false]], "from_json() (bicop method)": [[11, "pyvinecopulib.Bicop.from_json", false]], "from_json() (cvinestructure method)": [[32, "pyvinecopulib.CVineStructure.from_json", false]], "from_json() (dvinestructure method)": [[48, "pyvinecopulib.DVineStructure.from_json", false]], "from_json() (rvinestructure method)": [[70, "pyvinecopulib.RVineStructure.from_json", false]], "from_json() (vinecop method)": [[91, "pyvinecopulib.Vinecop.from_json", false]], "from_matrix() (cvinestructure method)": [[33, "pyvinecopulib.CVineStructure.from_matrix", false]], "from_matrix() (dvinestructure method)": [[49, "pyvinecopulib.DVineStructure.from_matrix", false]], "from_matrix() (rvinestructure method)": [[71, "pyvinecopulib.RVineStructure.from_matrix", false]], "from_order() (cvinestructure method)": [[34, "pyvinecopulib.CVineStructure.from_order", false]], "from_order() (dvinestructure method)": [[50, "pyvinecopulib.DVineStructure.from_order", false]], "from_order() (rvinestructure method)": [[72, "pyvinecopulib.RVineStructure.from_order", false]], "from_structure() (vinecop method)": [[92, "pyvinecopulib.Vinecop.from_structure", false]], "get_family() (vinecop method)": [[93, "pyvinecopulib.Vinecop.get_family", false]], "get_pair_copula() (vinecop method)": [[94, "pyvinecopulib.Vinecop.get_pair_copula", false]], "get_parameters() (vinecop method)": [[95, "pyvinecopulib.Vinecop.get_parameters", false]], "get_rotation() (vinecop method)": [[96, "pyvinecopulib.Vinecop.get_rotation", false]], "get_tau() (vinecop method)": [[97, "pyvinecopulib.Vinecop.get_tau", false]], "ghalton() (in module pyvinecopulib)": [[116, "pyvinecopulib.ghalton", false]], "hfunc1() (bicop method)": [[12, "pyvinecopulib.Bicop.hfunc1", false]], "hfunc2() (bicop method)": [[13, "pyvinecopulib.Bicop.hfunc2", false]], "hinv1() (bicop method)": [[14, "pyvinecopulib.Bicop.hinv1", false]], "hinv2() (bicop method)": [[15, "pyvinecopulib.Bicop.hinv2", false]], "inverse_rosenblatt() (vinecop method)": [[98, "pyvinecopulib.Vinecop.inverse_rosenblatt", false]], "loglik() (bicop method)": [[16, "pyvinecopulib.Bicop.loglik", false]], "loglik() (vinecop method)": [[99, "pyvinecopulib.Vinecop.loglik", false]], "mbic() (bicop method)": [[17, "pyvinecopulib.Bicop.mbic", false]], "mbicv() (vinecop method)": [[100, "pyvinecopulib.Vinecop.mbicv", false]], "min_array() (cvinestructure method)": [[35, "pyvinecopulib.CVineStructure.min_array", false]], "min_array() (dvinestructure method)": [[51, "pyvinecopulib.DVineStructure.min_array", false]], "min_array() (rvinestructure method)": [[73, "pyvinecopulib.RVineStructure.min_array", false]], "module": [[116, "module-pyvinecopulib", false]], "needed_hfunc1() (cvinestructure method)": [[36, "pyvinecopulib.CVineStructure.needed_hfunc1", false]], "needed_hfunc1() (dvinestructure method)": [[52, "pyvinecopulib.DVineStructure.needed_hfunc1", false]], "needed_hfunc1() (rvinestructure method)": [[74, "pyvinecopulib.RVineStructure.needed_hfunc1", false]], "needed_hfunc2() (cvinestructure method)": [[37, "pyvinecopulib.CVineStructure.needed_hfunc2", false]], "needed_hfunc2() (dvinestructure method)": [[53, "pyvinecopulib.DVineStructure.needed_hfunc2", false]], "needed_hfunc2() (rvinestructure method)": [[75, "pyvinecopulib.RVineStructure.needed_hfunc2", false]], "parameters_to_tau() (bicop method)": [[18, "pyvinecopulib.Bicop.parameters_to_tau", false]], "pdf() (bicop method)": [[19, "pyvinecopulib.Bicop.pdf", false]], "pdf() (vinecop method)": [[101, "pyvinecopulib.Vinecop.pdf", false]], "plot() (bicop method)": [[20, "pyvinecopulib.Bicop.plot", false]], "plot() (vinecop method)": [[102, "pyvinecopulib.Vinecop.plot", false]], "pyvinecopulib": [[116, "module-pyvinecopulib", false]], "rosenblatt() (vinecop method)": [[103, "pyvinecopulib.Vinecop.rosenblatt", false]], "rvinestructure (class in pyvinecopulib)": [[66, "pyvinecopulib.RVineStructure", false]], "select() (bicop method)": [[21, "pyvinecopulib.Bicop.select", false]], "select() (vinecop method)": [[104, "pyvinecopulib.Vinecop.select", false]], "simulate() (bicop method)": [[22, "pyvinecopulib.Bicop.simulate", false]], "simulate() (cvinestructure method)": [[38, "pyvinecopulib.CVineStructure.simulate", false]], "simulate() (dvinestructure method)": [[54, "pyvinecopulib.DVineStructure.simulate", false]], "simulate() (rvinestructure method)": [[76, "pyvinecopulib.RVineStructure.simulate", false]], "simulate() (vinecop method)": [[105, "pyvinecopulib.Vinecop.simulate", false]], "simulate_uniform() (in module pyvinecopulib)": [[116, "pyvinecopulib.simulate_uniform", false]], "sobol() (in module pyvinecopulib)": [[116, "pyvinecopulib.sobol", false]], "str() (bicop method)": [[23, "pyvinecopulib.Bicop.str", false]], "str() (cvinestructure method)": [[39, "pyvinecopulib.CVineStructure.str", false]], "str() (dvinestructure method)": [[55, "pyvinecopulib.DVineStructure.str", false]], "str() (fitcontrolsbicop method)": [[62, "pyvinecopulib.FitControlsBicop.str", false]], "str() (fitcontrolsvinecop method)": [[65, "pyvinecopulib.FitControlsVinecop.str", false]], "str() (rvinestructure method)": [[77, "pyvinecopulib.RVineStructure.str", false]], "str() (vinecop method)": [[106, "pyvinecopulib.Vinecop.str", false]], "struct_array() (cvinestructure method)": [[40, "pyvinecopulib.CVineStructure.struct_array", false]], "struct_array() (dvinestructure method)": [[56, "pyvinecopulib.DVineStructure.struct_array", false]], "struct_array() (rvinestructure method)": [[78, "pyvinecopulib.RVineStructure.struct_array", false]], "tau_to_parameters() (bicop method)": [[24, "pyvinecopulib.Bicop.tau_to_parameters", false]], "to_file() (bicop method)": [[25, "pyvinecopulib.Bicop.to_file", false]], "to_file() (cvinestructure method)": [[41, "pyvinecopulib.CVineStructure.to_file", false]], "to_file() (dvinestructure method)": [[57, "pyvinecopulib.DVineStructure.to_file", false]], "to_file() (rvinestructure method)": [[79, "pyvinecopulib.RVineStructure.to_file", false]], "to_file() (vinecop method)": [[107, "pyvinecopulib.Vinecop.to_file", false]], "to_json() (bicop method)": [[26, "pyvinecopulib.Bicop.to_json", false]], "to_json() (cvinestructure method)": [[42, "pyvinecopulib.CVineStructure.to_json", false]], "to_json() (dvinestructure method)": [[58, "pyvinecopulib.DVineStructure.to_json", false]], "to_json() (rvinestructure method)": [[80, "pyvinecopulib.RVineStructure.to_json", false]], "to_json() (vinecop method)": [[108, "pyvinecopulib.Vinecop.to_json", false]], "to_pseudo_obs() (in module pyvinecopulib)": [[116, "pyvinecopulib.to_pseudo_obs", false]], "truncate() (cvinestructure method)": [[43, "pyvinecopulib.CVineStructure.truncate", false]], "truncate() (dvinestructure method)": [[59, "pyvinecopulib.DVineStructure.truncate", false]], "truncate() (rvinestructure method)": [[81, "pyvinecopulib.RVineStructure.truncate", false]], "truncate() (vinecop method)": [[109, "pyvinecopulib.Vinecop.truncate", false]], "vinecop (class in pyvinecopulib)": [[82, "pyvinecopulib.Vinecop", false]]}, "objects": {"": [[116, 0, 0, "-", "pyvinecopulib"]], "pyvinecopulib": [[2, 1, 1, "", "Bicop"], [27, 1, 1, "", "BicopFamily"], [28, 1, 1, "", "CVineStructure"], [44, 1, 1, "", "DVineStructure"], [60, 1, 1, "", "FitControlsBicop"], [63, 1, 1, "", "FitControlsVinecop"], [66, 1, 1, "", "RVineStructure"], [82, 1, 1, "", "Vinecop"], [116, 3, 1, "", "ghalton"], [116, 3, 1, "", "simulate_uniform"], [116, 3, 1, "", "sobol"], [116, 3, 1, "", "to_pseudo_obs"]], "pyvinecopulib.Bicop": [[3, 2, 1, "", "__init__"], [4, 2, 1, "", "aic"], [5, 2, 1, "", "bic"], [6, 2, 1, "", "cdf"], [7, 2, 1, "", "fit"], [8, 2, 1, "", "from_data"], [9, 2, 1, "", "from_family"], [10, 2, 1, "", "from_file"], [11, 2, 1, "", "from_json"], [12, 2, 1, "", "hfunc1"], [13, 2, 1, "", "hfunc2"], [14, 2, 1, "", "hinv1"], [15, 2, 1, "", "hinv2"], [16, 2, 1, "", "loglik"], [17, 2, 1, "", "mbic"], [18, 2, 1, "", "parameters_to_tau"], [19, 2, 1, "", "pdf"], [20, 2, 1, "", "plot"], [21, 2, 1, "", "select"], [22, 2, 1, "", "simulate"], [23, 2, 1, "", "str"], [24, 2, 1, "", "tau_to_parameters"], [25, 2, 1, "", "to_file"], [26, 2, 1, "", "to_json"]], "pyvinecopulib.CVineStructure": [[29, 2, 1, "", "__init__"], [30, 2, 1, "", "from_dimension"], [31, 2, 1, "", "from_file"], [32, 2, 1, "", "from_json"], [33, 2, 1, "", "from_matrix"], [34, 2, 1, "", "from_order"], [35, 2, 1, "", "min_array"], [36, 2, 1, "", "needed_hfunc1"], [37, 2, 1, "", "needed_hfunc2"], [38, 2, 1, "", "simulate"], [39, 2, 1, "", "str"], [40, 2, 1, "", "struct_array"], [41, 2, 1, "", "to_file"], [42, 2, 1, "", "to_json"], [43, 2, 1, "", "truncate"]], "pyvinecopulib.DVineStructure": [[45, 2, 1, "", "__init__"], [46, 2, 1, "", "from_dimension"], [47, 2, 1, "", "from_file"], [48, 2, 1, "", "from_json"], [49, 2, 1, "", "from_matrix"], [50, 2, 1, "", "from_order"], [51, 2, 1, "", "min_array"], [52, 2, 1, "", "needed_hfunc1"], [53, 2, 1, "", "needed_hfunc2"], [54, 2, 1, "", "simulate"], [55, 2, 1, "", "str"], [56, 2, 1, "", "struct_array"], [57, 2, 1, "", "to_file"], [58, 2, 1, "", "to_json"], [59, 2, 1, "", "truncate"]], "pyvinecopulib.FitControlsBicop": [[61, 2, 1, "", "__init__"], [62, 2, 1, "", "str"]], "pyvinecopulib.FitControlsVinecop": [[64, 2, 1, "", "__init__"], [65, 2, 1, "", "str"]], "pyvinecopulib.RVineStructure": [[67, 2, 1, "", "__init__"], [68, 2, 1, "", "from_dimension"], [69, 2, 1, "", "from_file"], [70, 2, 1, "", "from_json"], [71, 2, 1, "", "from_matrix"], [72, 2, 1, "", "from_order"], [73, 2, 1, "", "min_array"], [74, 2, 1, "", "needed_hfunc1"], [75, 2, 1, "", "needed_hfunc2"], [76, 2, 1, "", "simulate"], [77, 2, 1, "", "str"], [78, 2, 1, "", "struct_array"], [79, 2, 1, "", "to_file"], [80, 2, 1, "", "to_json"], [81, 2, 1, "", "truncate"]], "pyvinecopulib.Vinecop": [[83, 2, 1, "", "__init__"], [84, 2, 1, "", "aic"], [85, 2, 1, "", "bic"], [86, 2, 1, "", "cdf"], [87, 2, 1, "", "fit"], [88, 2, 1, "", "from_data"], [89, 2, 1, "", "from_dimension"], [90, 2, 1, "", "from_file"], [91, 2, 1, "", "from_json"], [92, 2, 1, "", "from_structure"], [93, 2, 1, "", "get_family"], [94, 2, 1, "", "get_pair_copula"], [95, 2, 1, "", "get_parameters"], [96, 2, 1, "", "get_rotation"], [97, 2, 1, "", "get_tau"], [98, 2, 1, "", "inverse_rosenblatt"], [99, 2, 1, "", "loglik"], [100, 2, 1, "", "mbicv"], [101, 2, 1, "", "pdf"], [102, 2, 1, "", "plot"], [103, 2, 1, "", "rosenblatt"], [104, 2, 1, "", "select"], [105, 2, 1, "", "simulate"], [106, 2, 1, "", "str"], [107, 2, 1, "", "to_file"], [108, 2, 1, "", "to_json"], [109, 2, 1, "", "truncate"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [1, 7, 18, 24, 27, 38, 54, 76, 97, 102, 104, 116, 117], "0": [1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 33, 49, 61, 64, 66, 71, 84, 85, 98, 99, 100, 102, 103, 104, 111, 112, 113, 114, 115, 116, 117], "00": 112, "00737741": 113, "008": 103, "01": 114, "0190836": 111, "0193519": 111, "01956738": 111, "02": [103, 112, 114], "03": [113, 114], "03148971": 112, "0331152": 111, "0353035225961107": 111, "0356469": 113, "03875948": 112, "03952828": 112, "04": [112, 113, 114], "04078053": 111, "04211888": 111, "04961411": 112, "05": [113, 114], "06": 113, "06597532": 112, "07": 114, "08152695": 111, "08241333": 111, "0873499": 111, "09": [112, 113], "090303": 115, "09401172": 111, "09819528887711": 112, "09953434": 111, "1": [4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 19, 21, 24, 27, 28, 29, 30, 33, 34, 43, 44, 45, 46, 49, 50, 59, 61, 64, 66, 67, 68, 71, 72, 81, 84, 85, 86, 87, 98, 99, 100, 101, 102, 103, 104, 105, 109, 111, 112, 113, 114, 115, 116, 117], "10": [102, 103, 111, 112, 113, 114, 115], "1000": [98, 111, 112, 113, 115], "10000": 86, "1016": 103, "10561078": 112, "10872534": [111, 112], "10911159": 112, "11": [1, 114, 115, 117], "11239488": 113, "112944": 115, "11345477": 111, "11345478": 112, "11520579": 113, "11748814": 111, "12286857": [111, 112], "123": 115, "1234": [102, 113, 114], "124035": 115, "12668051": 112, "1292": 115, "13": [38, 54, 76, 112], "130": 115, "132": 115, "133": 115, "13685699": 112, "13932915": 111, "1412032": 113, "1431": 115, "14523531": 111, "14967754": 113, "15": [22, 113, 114, 115, 116], "152": 115, "156": 115, "157": 0, "158": 115, "16": 115, "160": 0, "1638618": 112, "164": 0, "165": 115, "1668": 115, "168": 0, "169": 0, "17": [1, 114, 117], "170": 0, "17099976": 113, "17627362": 112, "18": 114, "180": [2, 9], "18184118": 111, "18307038": 111, "18332674": 112, "18446744073709551615": [29, 30, 34, 45, 46, 50, 64, 67, 68, 72], "18643731": 112, "19": [22, 112, 114, 116], "19326385": 112, "194": 115, "1952": [98, 103], "19787956": 112, "199": 112, "1e4": 86, "2": [1, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 19, 21, 22, 28, 33, 44, 49, 66, 71, 84, 85, 90, 98, 100, 102, 103, 107, 111, 112, 113, 114, 115, 117], "20": [102, 114], "200": 98, "2007": 103, "2008": [22, 116], "2009": [1, 22, 116, 117], "2013": 104, "2014": [38, 54, 76], "21": [112, 114], "21625326": 113, "22": 114, "2222099": 112, "22422017": 113, "24": 114, "24840034": 113, "26": [112, 113], "26213502": 111, "2635": 116, "26444729": 111, "2654": 116, "270": [2, 9, 112], "2777274": 112, "28213894": 112, "28590505": 112, "28749817": 111, "288": [38, 54, 76], "29": [112, 114], "2d": [84, 85, 86, 87, 99, 100, 101, 104], "3": [1, 28, 33, 44, 49, 66, 71, 111, 112, 113, 114, 115, 117], "30": [114, 116], "300": 116, "30865931": 112, "30879851": 112, "31": 114, "32": 114, "32192543": 111, "33": [112, 113, 114], "332229": 115, "33400987": 113, "33903085": 111, "34581349": 113, "34974545": 112, "35645124": [111, 112], "35825765": 113, "359186": 115, "36": 114, "3699726": 111, "37": [112, 114], "37095772": 113, "37153588": 111, "37455509": 112, "39309954": 113, "39339764": 112, "39444021": 111, "39604429": 112, "39839611": 111, "39910753": 111, "4": [1, 22, 28, 33, 44, 49, 66, 71, 111, 112, 113, 114, 115, 116, 117], "40": [112, 113], "40936082": 111, "42": 113, "43": 112, "430133336608019": 111, "44": [112, 113, 114], "44179055": 111, "44467283": 113, "445451": 115, "453643": 115, "46366853": 112, "47": 113, "472346": 115, "47865733": 112, "48023317": 112, "4810942": 111, "48378773": 113, "49": [113, 114], "5": [1, 7, 20, 111, 112, 113, 114, 115, 117], "50": 112, "52": [104, 111], "52499938": 111, "526385": 115, "53": 113, "53494551": 112, "54": 112, "542070": 115, "55280137": 113, "55365742": 111, "56490065": 113, "572": 0, "573": 0, "573257": 115, "576": 0, "577": 0, "579": 0, "579065": 115, "580": 0, "58076221": 111, "581": 0, "583": 0, "584": 0, "585": 0, "586": 0, "588": 0, "58895048": 111, "589": 0, "59": 104, "592": 0, "5946634": 113, "59671571": 111, "597": 0, "598": 0, "599": 0, "6": [38, 54, 76, 111, 112, 113], "60": [112, 113, 114], "601": 0, "60171": 112, "602": 0, "603": 0, "607": 0, "608": 0, "61": [113, 114], "611": 0, "612": 0, "613": 0, "61323437": 111, "62": [112, 114], "620": 0, "62193432": 112, "623": 0, "624": 0, "628": 0, "629": 0, "63": [112, 113, 114], "64": 114, "64236225": 113, "65748713": 111, "66cf8b0": 0, "67": 113, "67583001": 112, "676751": 115, "69": 104, "6902412": 112, "6f": 115, "7": 117, "70": 114, "7092173": 111, "71": 114, "71452328": 111, "72": 114, "72011592": 113, "72159236": 112, "724582": 115, "72886036": 112, "73": 112, "73656299": 113, "74": 113, "747164": 115, "75111263": 112, "76413881": [111, 112], "77391072": 113, "77472657": [111, 112], "77807695": [111, 112], "77931921": 112, "78": 112, "78049474": 112, "781500": 115, "78248955": 111, "7849333316959906": 111, "78532554": 112, "78638305": [111, 112], "79": 112, "79267514": 111, "79384106": 111, "79397093": 112, "79699695": 111, "79869798": 111, "80": [112, 113], "80483478": 111, "81": [112, 114], "81301356": 111, "8170847": [111, 112], "81770422": 111, "82": 114, "83": 114, "8386675": 113, "84": 114, "84458738": 112, "84611164": 112, "847319": 115, "84989695": 112, "85": 114, "85523898": 112, "8605475": 112, "86432409": 113, "865059": 115, "86804342": 113, "8728502": 112, "88381331": 113, "88594611": 112, "89": 114, "8x": 0, "9": [17, 61, 64, 100, 111, 112, 113], "90": [2, 9, 111, 112, 114], "90118677": 112, "90877192": [111, 112], "91": 114, "91370584684138": 112, "92303602": 111, "92393781": 111, "93": 112, "93512784": 113, "94255384": 113, "944": 112, "94610848": 111, "95100319": 112, "95685292342069": 112, "96": 112, "96386291": 111, "97430917": 112, "98": 112, "A": [1, 2, 6, 12, 13, 14, 15, 19, 22, 24, 27, 28, 33, 44, 49, 60, 61, 63, 64, 66, 71, 82, 86, 101, 106, 111, 114, 116, 117], "By": [1, 30, 34, 46, 50, 68, 72, 117], "For": [0, 6, 7, 12, 13, 14, 15, 16, 19, 21, 22, 28, 44, 64, 66, 86, 98, 101, 103, 104, 116], "If": [1, 22, 43, 59, 81, 98, 102, 103, 104, 109, 116, 117], "In": [104, 114], "It": [0, 1, 3, 20, 66, 83, 87, 102, 117], "On": [1, 117], "Or": [1, 3, 111, 117], "The": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 38, 41, 42, 43, 45, 46, 47, 48, 49, 50, 54, 57, 58, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 117], "Then": [1, 7, 21, 111, 117], "These": 0, "To": [1, 117], "aa": [1, 117], "abc": [3, 8, 9, 22, 29, 34, 38, 45, 50, 54, 61, 64, 72, 76, 86, 88, 92, 103, 105, 106, 116], "abov": [33, 49, 66, 71, 98, 103, 104], "access": [35, 36, 37, 40, 51, 52, 53, 56, 73, 74, 75, 78], "accuraci": 7, "achiev": 87, "acm": [22, 116], "activ": [1, 117], "ad": 0, "add": [0, 102], "add_edge_label": 102, "advantag": [1, 117], "after": 104, "afterward": 111, "agre": [1, 117], "aic": [21, 61, 64, 111, 112], "akaik": [4, 84], "al": [1, 117], "albeit": 104, "algorithm": [1, 38, 54, 64, 66, 76, 104, 112, 117], "align": 0, "all": [0, 1, 21, 27, 28, 33, 38, 44, 49, 54, 61, 64, 66, 71, 76, 88, 89, 92, 102, 104, 106, 117], "allow": [0, 9, 66], "allow_rot": [0, 61, 64], "alon": [1, 117], "along": [0, 104], "alreadi": [27, 43, 59, 64, 81, 87, 109], "also": [1, 27, 117], "altern": [0, 3, 67, 83], "alwai": 105, "an": [0, 1, 3, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 25, 26, 31, 33, 47, 49, 66, 67, 69, 71, 83, 84, 85, 86, 88, 92, 98, 99, 100, 101, 103, 104, 105, 112, 116, 117], "analysi": 104, "analyt": 0, "ani": [1, 66, 98, 103, 117], "anti": 66, "api": [1, 110, 117], "append": 115, "appli": [84, 85, 98, 99, 100, 101, 103, 105, 116], "applic": 104, "apt": [1, 117], "ar": [3, 6, 7, 12, 13, 14, 15, 16, 19, 21, 22, 27, 28, 44, 61, 64, 66, 67, 83, 86, 87, 101, 102, 103, 104, 110, 116], "archimedean": [2, 27], "arg": [2, 28, 44, 60, 63, 66, 82], "argument": [0, 14, 15], "arrai": [3, 4, 5, 9, 16, 17, 20, 29, 31, 33, 34, 35, 36, 37, 40, 41, 42, 45, 47, 49, 50, 51, 52, 53, 56, 57, 58, 61, 64, 66, 69, 71, 72, 73, 74, 75, 78, 79, 80, 84, 85, 90, 99, 100, 107, 108, 111, 112, 113, 115, 116], "arrrai": 66, "articl": [22, 116], "asan": 0, "asarrai": 113, "assum": [87, 98, 103], "atom": 103, "attribut": [2, 10, 25, 28, 44, 60, 63, 66, 82, 90, 107], "autodoc": [1, 117], "automat": [1, 20, 64, 117], "avail": [0, 1, 7, 27, 86, 104, 111, 117], "averag": 116, "ax": 20, "back": 113, "backend": 0, "base": [0, 1, 43, 59, 61, 64, 81, 109, 116, 117], "baselin": 100, "basi": 104, "batch": [84, 85, 86, 98, 99, 100, 101, 103, 105], "bayesian": [5, 17, 85, 100], "bb": 27, "bb1": [2, 27, 61, 64, 112], "bb6": [2, 27, 61, 64, 112], "bb7": [0, 2, 27, 61, 64], "bb8": [2, 27, 61, 64], "becaus": [27, 86, 115], "been": [0, 104], "befor": [61, 64, 104], "behav": 104, "being": 17, "below": [33, 49, 66, 71], "benchmark": [0, 110, 117], "best": 21, "better": 116, "between": 66, "bic": [17, 21, 61, 64, 111, 112], "bicop": [0, 82, 90, 92, 94, 107, 108, 110, 112, 115, 117], "bicopfamili": [2, 3, 9, 20, 61, 64, 93, 102, 111, 112, 113, 114, 115], "binari": 0, "bind": 0, "bivari": [1, 2, 3, 7, 9, 22, 27, 60, 61, 87, 110, 117], "block": [1, 6, 7, 12, 13, 14, 15, 16, 19, 21, 86, 101, 104, 117], "book": [38, 54, 76], "bool": [22, 31, 32, 33, 34, 36, 37, 38, 40, 47, 48, 49, 50, 52, 53, 54, 56, 61, 64, 69, 70, 71, 72, 74, 75, 76, 78, 90, 91, 102, 103, 105, 116], "boost": [0, 1, 117], "boost_allow_deprecated_head": 0, "boost_concept": 0, "boost_include_dir": [1, 117], "boost_math_promote_double_polici": 0, "boost_no_auto_ptr": 0, "both": [1, 88, 92, 111, 113, 117], "boundari": 27, "brechmann": 104, "brockwel": 103, "build": 64, "c": [0, 1, 2, 3, 6, 8, 9, 12, 13, 14, 15, 16, 19, 22, 28, 29, 61, 64, 86, 88, 92, 99, 101, 104, 111, 113, 114, 115, 116, 117], "calcul": 15, "call": [21, 66, 87, 104], "calul": 14, "can": [1, 3, 6, 12, 13, 14, 15, 16, 19, 20, 23, 25, 33, 49, 62, 65, 66, 71, 83, 86, 87, 98, 101, 102, 103, 104, 106, 117], "carlo": 86, "case": [104, 114], "cd": [0, 1, 117], "cdf": [7, 12, 13, 14, 15, 16, 19, 21, 101, 103, 104, 111, 114], "ch": 116, "changelog": 117, "character": [2, 66, 82], "check": [0, 31, 32, 33, 34, 47, 48, 49, 50, 66, 69, 70, 71, 72, 90, 91, 115], "child": 108, "choic": [61, 64], "ci": 0, "class": [0, 1, 2, 3, 27, 28, 44, 60, 63, 66, 67, 82, 83, 111, 117], "clayon": 111, "clayton": [2, 27, 61, 64, 111, 112], "clone": [1, 117], "close": 86, "cmake": [0, 1, 117], "coincid": [6, 7, 12, 13, 14, 15, 16, 19, 21, 86, 101, 104], "collect": [3, 8, 9, 22, 29, 34, 38, 45, 50, 54, 61, 64, 72, 76, 86, 88, 92, 103, 105, 106, 115, 116], "column": [6, 12, 13, 14, 15, 16, 19, 38, 54, 66, 76, 86, 101, 116], "com": [1, 117], "command": [1, 117], "compar": [22, 116], "compil": [0, 1, 115, 117], "comprehens": [1, 117], "comput": [0, 84, 85, 86, 87, 98, 99, 100, 101, 103, 104, 105, 116], "concurr": [61, 64, 84, 85, 86, 98, 99, 100, 101, 103, 105], "condit": [1, 44, 66, 98, 103, 112, 113, 114, 117], "configur": [98, 115], "connect": 28, "consid": [61, 64], "consider": 0, "consist": [1, 4, 5, 84, 85, 100, 117], "constant": [0, 61, 64, 111, 112], "construct": 116, "constructor": [0, 3, 67, 83, 88, 111], "consumpt": [1, 117], "contain": [4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 17, 19, 21, 25, 26, 27, 31, 33, 41, 42, 43, 47, 49, 57, 58, 59, 66, 69, 71, 79, 80, 81, 86, 90, 98, 101, 103, 104, 107, 108, 109], "contin": 105, "continu": [2, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 21, 86, 88, 92, 101, 104], "contour": [20, 111], "contribut": [1, 117], "control": [0, 3, 7, 8, 21, 60, 61, 62, 63, 64, 65, 87, 88, 102, 104, 111, 112, 113, 114, 115], "controls_itau": 115, "controls_itau_par_method": 115, "controls_tl": 115, "conveni": 27, "convert": [0, 11, 18, 24, 26, 32, 39, 42, 48, 55, 58, 70, 77, 80, 91, 103, 108, 115], "cop": [20, 111, 112, 113, 115], "cop2": [111, 112], "cop3": [111, 112], "cop4": 111, "cop5": 111, "copula": [0, 2, 3, 6, 7, 9, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 60, 61, 63, 64, 66, 82, 83, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 116], "core": [1, 117], "correct": [103, 104], "correl": 111, "correspond": [40, 56, 66, 78, 90], "could": 0, "counter": 66, "cov": 113, "covari": 113, "cover": 27, "creat": [0, 1, 8, 88, 92, 112, 117], "criterion": [4, 5, 17, 61, 64, 84, 85, 100, 111, 112], "cross": 0, "ctest": 0, "cumul": 114, "cumulative_prob": 114, "current": [18, 104], "custom": 64, "cvine": 112, "cvinestructur": 112, "czado": 104, "d": [2, 8, 9, 29, 30, 34, 38, 43, 44, 45, 46, 50, 54, 59, 66, 67, 68, 72, 76, 81, 83, 84, 85, 86, 87, 88, 89, 92, 98, 99, 100, 101, 103, 104, 105, 109, 112, 113, 114, 115, 116], "data": [0, 3, 7, 8, 21, 61, 64, 83, 87, 88, 98, 103, 104, 105, 110, 111, 112, 115, 116, 117], "dataset": [110, 117], "def": [114, 115], "default": [0, 3, 8, 20, 22, 30, 34, 38, 46, 50, 54, 67, 68, 72, 76, 83, 86, 88, 92, 102, 103, 104, 105, 111, 112, 116], "default_tim": 115, "defaultdict": 115, "defin": [4, 5, 16, 17, 19, 84, 85, 98, 99, 100, 101, 103, 104, 111, 112, 115], "definit": 113, "degre": 111, "denot": [7, 21, 66], "densiti": [16, 19, 20, 99, 101, 111], "depend": [0, 1, 27, 104, 117], "deriv": 0, "detail": [103, 111, 112], "determin": [28, 44], "dev": [1, 117], "devel": 116, "develop": [1, 117], "df": [112, 113, 114], "diagon": [29, 34, 45, 50, 66, 72], "differ": [7, 20, 61, 104, 115], "digon": [33, 49, 71], "dim": [30, 46, 68], "dimens": [0, 1, 30, 38, 43, 46, 54, 59, 67, 68, 76, 81, 83, 89, 113, 116, 117], "dimension": [66, 109, 116], "directli": [111, 112, 115], "disabl": 0, "discard": [7, 21, 104], "discover": 0, "discret": [0, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 21, 84, 85, 86, 87, 88, 92, 99, 100, 101, 103, 104, 110, 117], "displai": 115, "dissmann": 104, "distribut": [0, 1, 6, 38, 54, 76, 86, 98, 103, 113, 114, 116, 117], "divid": [19, 101], "do": [1, 86, 117], "doc": [0, 1, 117], "document": [0, 110], "doe": [43, 59, 81, 109], "don": 27, "done": [104, 105], "dot": [66, 98, 103, 113], "doubl": [25, 84, 85, 99, 100], "draw": 86, "dtype": [3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 33, 49, 61, 64, 71, 84, 85, 86, 87, 88, 92, 98, 99, 100, 101, 103, 104, 105, 116], "due": 44, "dure": 64, "e": [0, 1, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 21, 66, 86, 88, 92, 101, 104, 113, 116, 117], "each": [0, 2, 28, 44, 66, 87, 88, 90, 92, 104, 107, 108, 116], "edg": [35, 36, 37, 40, 51, 52, 53, 56, 66, 73, 74, 75, 78, 90, 92, 93, 94, 95, 96, 97, 102, 107, 108, 112, 113, 114], "effect": [4, 5, 17, 84, 85, 100], "eigen": [0, 1, 117], "eigen3": [1, 117], "eigen3_include_dir": [1, 117], "either": [2, 7, 20, 21, 66, 88, 92, 102], "element": [0, 35, 36, 37, 40, 51, 52, 53, 56, 66, 73, 74, 75, 78], "ellipt": [2, 27], "empir": [113, 116], "empti": [0, 22, 38, 54, 61, 64, 76, 83, 86, 92, 103, 105, 106, 116], "encod": [33, 49, 66, 71, 90, 107, 108], "end": [38, 54, 76], "ensur": 103, "entir": [28, 44], "entri": [29, 34, 45, 50, 66, 72, 104], "environ": [1, 117], "equal": [66, 104], "equival": [8, 87, 104], "error": 0, "especi": [1, 117], "essenti": 104, "estim": [27, 86, 104], "et": [1, 117], "etc": [28, 90, 107, 108], "ethz": 116, "evalu": [4, 5, 6, 12, 13, 14, 15, 16, 17, 19, 84, 85, 86, 98, 99, 100, 101, 103], "even": [4, 84], "everi": 112, "exactli": 114, "exampl": [0, 1, 28, 33, 44, 49, 71, 114, 117], "examplari": 98, "exce": 98, "except": 27, "exclud": [61, 64], "exemplari": 66, "exist": 66, "exp": [20, 114], "export": [1, 117], "expos": 0, "express": 86, "extens": 0, "extract": [43, 59, 81, 109], "extrem": [2, 27], "extreme_valu": 27, "f": [4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 33, 49, 71, 84, 85, 86, 87, 88, 92, 98, 99, 100, 101, 103, 104, 105, 111, 112, 115, 116], "f_": [6, 7, 12, 13, 14, 15, 16, 19, 21, 86, 101], "f_x": [104, 116], "f_y": 104, "factor": [61, 64], "factori": [0, 88, 92, 114], "fals": [0, 22, 38, 40, 54, 56, 64, 76, 78, 87, 103, 104, 105, 116], "fam": [10, 25, 26], "famili": [0, 1, 2, 3, 7, 9, 10, 17, 18, 20, 21, 24, 25, 26, 27, 61, 64, 87, 93, 104, 113, 114, 115, 117], "family_set": [21, 61, 64, 102, 111, 112, 113, 114, 115], "far": 64, "faur": [22, 116], "fct": [111, 112], "featur": [1, 117], "feel": [1, 117], "file": [0, 1, 3, 10, 25, 31, 41, 47, 57, 67, 69, 79, 83, 90, 107, 117], "filenam": [10, 25, 31, 41, 47, 57, 69, 79, 90, 107], "financi": 104, "find": [1, 117], "first": [6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 21, 28, 44, 66, 86, 100, 101, 102, 104, 105, 111], "fit": [0, 3, 21, 25, 60, 61, 63, 64, 88, 104, 110, 117], "fit_cont": 114, "fit_disc": 114, "fit_mix": 114, "fitcontrolsbicop": [0, 7, 8, 21, 87, 111, 115], "fitcontrolsconfig": 0, "fitcontrolsvinecop": [0, 83, 87, 88, 102, 104, 112, 113, 114, 115], "fix": 7, "flag": 0, "flexibl": [0, 1, 117], "float": [4, 5, 16, 17, 18, 24, 61, 64, 84, 85, 97, 99, 100], "float64": [3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 61, 64, 84, 85, 86, 87, 88, 98, 99, 100, 101, 103, 104, 105, 116], "follow": [1, 27, 66, 104, 110, 117], "forg": [1, 117], "form": 86, "formal": 66, "format": [1, 117], "former": 108, "formula": [98, 103], "found": [1, 7, 117], "four": [10, 25], "frank": [2, 9, 27, 61, 64], "free": [1, 117], "freedom": 111, "from": [0, 3, 8, 10, 11, 22, 31, 32, 33, 38, 47, 48, 49, 54, 66, 67, 69, 70, 71, 76, 83, 86, 88, 90, 91, 98, 103, 105, 110, 111, 112, 115, 116], "from_data": [0, 3, 83, 102, 111, 112, 113, 114, 115], "from_dimens": [0, 67, 83], "from_famili": [0, 3], "from_fil": [0, 3, 67, 83], "from_json": [0, 3, 67, 83], "from_matrix": [0, 67], "from_ord": [0, 67], "from_structur": [0, 83, 112], "from_xzi": 0, "full": 2, "fulli": [2, 104], "function": [12, 13, 14, 15, 20, 21, 43, 59, 81, 84, 85, 86, 88, 92, 98, 99, 100, 101, 102, 103, 105, 109, 114, 115, 117], "functions_to_benchmark": 115, "functions_to_benchmark_bicop": 115, "further": [44, 66], "g": [0, 1, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 21, 86, 88, 92, 101, 104, 117], "gather": 66, "gaussian": [2, 9, 20, 27, 61, 64, 112, 113, 114, 115], "gb": 98, "gener": [1, 20, 22, 38, 54, 76, 86, 98, 102, 103, 105, 113, 114, 115, 116, 117], "generate_data": 115, "generate_data_bicop": 115, "get": [1, 93, 94, 95, 96, 97, 117], "get_indic": 0, "ghalton": 116, "git": [1, 117], "github": [1, 117], "give": 116, "given": [0, 30, 34, 43, 46, 50, 59, 67, 68, 72, 81, 83, 98, 103, 109], "graphviz": 102, "greater": [84, 85, 86, 98, 99, 100, 101, 103, 105], "grid": 20, "grid_siz": 20, "gt": [111, 112, 113, 114], "gumbel": [2, 27, 61, 64], "h": [12, 13, 14, 15, 22, 116], "h_1": [12, 14], "h_2": [13, 15], "ha": [98, 103, 104], "halton": [22, 116], "halv": 98, "handl": 0, "harri": [38, 54, 76], "have": [0, 1, 7, 17, 27, 100, 103, 115, 117], "header": [1, 117], "help": [111, 112], "here": [111, 112], "hfunc": 0, "hfunc1": 111, "hfunc2": 111, "high": [1, 117], "higher": 104, "hinv1": 111, "hinv2": 111, "hoeffd": 64, "hold": [6, 7, 12, 13, 14, 15, 16, 19, 21, 66, 86, 101, 104], "how": [66, 116], "hstack": 114, "html": [1, 116, 117], "http": [1, 116, 117], "i": [0, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26, 27, 28, 30, 34, 38, 43, 44, 46, 50, 54, 59, 66, 68, 72, 76, 81, 82, 84, 85, 86, 87, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 113, 116], "identifi": [2, 27], "impact": 115, "implement": [1, 2, 38, 54, 61, 64, 76, 117], "import": [20, 102], "improv": 0, "includ": [0, 1, 61, 64, 104, 110, 117], "incomplet": [7, 21, 104], "indep": [2, 3, 9, 27, 61, 64, 102, 112], "independ": [2, 3, 9, 17, 61, 64, 89, 98, 100, 103, 112, 116], "index": [35, 36, 40, 51, 52, 56, 66, 73, 74, 78], "indic": [6, 7, 12, 13, 14, 15, 16, 17, 19, 21, 40, 56, 78, 86, 101, 102, 104, 106, 116], "infer": [1, 117], "info": [1, 117], "inform": [4, 5, 17, 22, 84, 85, 100, 104, 116], "inherit": [28, 44], "input": [10, 11, 31, 32, 47, 48, 69, 70, 88, 90, 91], "instal": 0, "instanc": 66, "instanti": [0, 3, 8, 9, 10, 11, 30, 31, 32, 33, 34, 46, 47, 48, 49, 50, 61, 64, 67, 68, 69, 70, 71, 72, 83, 87, 89, 90, 91, 104, 112], "instead": [0, 38, 54, 76], "int": [3, 9, 20, 22, 29, 30, 34, 35, 36, 37, 38, 40, 43, 45, 46, 50, 51, 52, 53, 54, 56, 59, 61, 64, 67, 68, 72, 73, 74, 75, 76, 78, 81, 83, 84, 85, 86, 87, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 109, 114, 116], "integ": [6, 7, 10, 12, 13, 14, 15, 16, 19, 21, 25, 26, 86, 101, 104], "integr": [86, 116], "interest": 103, "interfac": [0, 1, 117], "intern": 66, "introduc": 0, "introduct": [110, 117], "invers": [7, 14, 15, 27, 98, 103, 105, 114], "inverse_rosenblatt": [103, 105, 112], "io": 0, "irrespect": [19, 101], "issu": [0, 1, 117], "itau": [7, 27, 61, 64, 115], "itau_bicop": 115, "itau_par_method": 115, "itau_par_method_bicop": 115, "item": 115, "its": [82, 104, 111], "itself": [6, 7, 12, 13, 14, 15, 16, 19, 21, 86, 90, 101, 104, 107, 108], "j": [38, 54, 66, 76, 98, 103, 104, 116], "joe": [2, 27, 38, 54, 61, 64, 76, 116], "joint": [19, 101], "jschueller": 0, "json": [0, 3, 10, 11, 25, 26, 31, 32, 41, 42, 47, 48, 57, 58, 67, 69, 70, 79, 80, 83, 90, 91, 107, 108], "jump": 66, "jupyt": 0, "just": [1, 117], "k": [4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 19, 21, 38, 54, 76, 84, 85, 86, 87, 98, 99, 100, 101, 103, 104, 114], "kei": 115, "kendal": [7, 18, 24, 27, 97, 104], "kernel": 2, "kruskal": [0, 64], "kuo": 116, "kurowicka": 104, "kwarg": [2, 28, 44, 60, 63, 66, 82], "label": 102, "larg": [98, 115], "latest": [0, 1, 117], "latter": [7, 108], "layout": 102, "ldot": [98, 103], "le": [12, 13, 14, 15], "least": [6, 7, 12, 13, 14, 15, 16, 19, 21, 86, 101, 104], "left": [6, 7, 12, 13, 14, 15, 16, 19, 21, 33, 49, 66, 71, 86, 101, 103, 104], "lemieux": [22, 116], "length": [6, 12, 13, 14, 15, 19, 86, 101], "leq": 116, "less": [43, 59, 66, 81, 98, 109], "let": [7, 21], "level": [0, 29, 30, 33, 34, 43, 45, 46, 49, 50, 59, 64, 67, 68, 71, 72, 81, 100, 104, 109, 112], "libboost": [1, 117], "libeigen3": [1, 117], "librari": [0, 1, 104, 116, 117], "like": [0, 11, 26, 32, 42, 48, 58, 70, 80, 108], "likelihood": [7, 16, 25, 61, 64, 99], "liklihood": [4, 5, 17, 84, 85, 100], "limit": [6, 7, 12, 13, 14, 15, 16, 19, 20, 21, 86, 101, 103, 104], "line": [38, 54, 76], "linear": [61, 64], "linux": [1, 117], "list": [1, 10, 25, 26, 90, 92, 102, 107, 108, 115, 117], "ll": 25, "local": [61, 64], "locat": [1, 117], "log": [4, 5, 16, 17, 25, 84, 85, 99, 100], "loglik": [0, 4, 5, 17, 61, 64, 84, 85, 100, 111, 112], "look": 113, "lower": [1, 27, 33, 49, 71, 117], "lt": [27, 111, 112, 113, 114], "m": [66, 98, 103], "mail": [1, 117], "main": [1, 117], "make": 113, "mamba": [1, 117], "manual": [1, 116, 117], "march": 0, "margin": [19, 20, 101, 111, 116], "margin_typ": [20, 111], "mat": [33, 49, 71, 112], "materi": [1, 117], "math": 114, "mathrm": [4, 5, 16, 17, 84, 85, 99, 100, 116], "matplotlib": [1, 20, 102, 117], "matric": 0, "matrix": [0, 2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 25, 26, 31, 33, 47, 49, 67, 69, 71, 83, 84, 85, 86, 87, 88, 92, 98, 99, 100, 101, 103, 104, 105, 112, 113, 116], "max": 115, "maxim": 104, "maximum": [7, 64], "mbic": [61, 64, 111, 112], "mcor": 64, "mean": [8, 9, 98, 113, 115], "measur": 104, "memori": [1, 98, 117], "method": [0, 2, 3, 7, 20, 28, 44, 60, 61, 63, 64, 66, 82, 87, 90, 102, 104, 111], "might": 115, "millisecond": 115, "min": 115, "minimum": [35, 51, 73], "minu": [6, 7, 12, 13, 14, 15, 16, 19, 21, 86, 101, 104], "miss": 104, "mit": [1, 117], "mle": [7, 61, 64, 111, 112], "model": [0, 1, 2, 3, 4, 5, 7, 8, 9, 17, 21, 22, 23, 25, 60, 61, 63, 64, 66, 82, 83, 84, 85, 86, 87, 89, 98, 100, 102, 103, 105, 106, 109, 110, 112, 117], "modern": [1, 117], "modifi": [17, 100], "modul": 27, "mont": 86, "more": [0, 1, 6, 12, 13, 14, 15, 16, 19, 22, 61, 64, 98, 103, 111, 112, 116, 117], "most": [39, 43, 55, 59, 66, 77, 81, 109], "mst": [0, 112], "mst_algorithm": 64, "mu": 114, "multi": [1, 117], "multipli": [61, 64, 111, 112], "multivari": [113, 116], "multivariate_norm": 113, "must": [18, 29, 33, 34, 45, 49, 50, 66, 71, 72], "mypi": [1, 117], "myst": [1, 117], "n": [1, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 19, 21, 22, 84, 85, 86, 87, 98, 99, 100, 101, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117], "n_sim": 113, "name": [2, 10, 25, 26, 27, 31, 41, 47, 57, 69, 79, 90, 102, 104, 107, 115], "nan": [7, 21, 104], "nanobind": [0, 1, 117], "nativ": 0, "natur": [38, 40, 54, 56, 66, 76, 78], "natural_ord": [38, 40, 54, 56, 76, 78], "nbsphinx": [1, 117], "ndarrai": [3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 33, 49, 61, 64, 71, 84, 85, 86, 87, 88, 92, 98, 99, 100, 101, 103, 104, 105, 116], "need": [1, 31, 47, 69, 117], "neg": [27, 113], "nest": [43, 59, 81, 109], "networkx": [1, 117], "never": [61, 64], "new": [111, 112], "newaxi": 115, "nlohmann": [26, 91, 108], "nob": [0, 25], "node": [42, 58, 80, 90, 91, 108, 112], "non": [17, 25, 61, 64, 100, 113], "none": [3, 7, 20, 21, 25, 27, 29, 41, 43, 45, 57, 59, 61, 64, 67, 79, 81, 83, 87, 88, 92, 102, 104, 107, 109, 112], "nonparametr": [1, 2, 4, 7, 9, 25, 27, 61, 64, 84, 85, 111, 112, 117], "nonparametric_method": [0, 61, 64], "nonparametric_mult": [61, 64], "norm": [20, 111], "normal": [20, 111, 113, 114, 115], "note": [1, 28, 44, 117], "notebook": [0, 110], "noth": [20, 43, 59, 81, 102, 109], "now": 0, "np": [20, 102, 111, 112, 113, 114, 115], "npar": 25, "num_thread": [61, 64, 84, 85, 86, 87, 98, 99, 100, 101, 103, 104, 105, 115], "number": [0, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 25, 38, 54, 61, 64, 66, 76, 84, 85, 86, 87, 89, 98, 99, 100, 101, 103, 104, 105, 111, 112, 113, 116], "numer": [10, 25, 26, 86], "numpi": [1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 33, 49, 61, 64, 71, 84, 85, 86, 87, 88, 92, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117], "o": 100, "o3": 0, "object": [11, 20, 25, 26, 28, 32, 33, 42, 44, 48, 49, 58, 66, 70, 71, 80, 82, 87, 90, 91, 95, 102, 104, 107, 108, 111, 112], "observ": [0, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 19, 21, 22, 25, 61, 64, 86, 87, 98, 101, 104, 105, 113, 115, 116], "off": 66, "ok": 113, "omit": [6, 12, 13, 14, 15, 16, 19, 86, 101, 104], "one": [0, 2, 6, 7, 9, 12, 13, 14, 15, 16, 19, 21, 24, 86, 101, 104], "one_par": 27, "ones": [7, 21, 114, 115], "onli": [0, 1, 7, 9, 61, 64, 66, 103, 111, 112, 117], "open": [1, 117], "oper": [0, 98, 103], "optim": 7, "option": [0, 1, 3, 83, 117], "order": [0, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 28, 29, 31, 33, 34, 38, 40, 41, 42, 44, 45, 47, 49, 50, 54, 56, 57, 58, 61, 64, 66, 67, 69, 71, 72, 76, 78, 79, 80, 84, 85, 86, 87, 88, 90, 92, 98, 99, 100, 101, 103, 104, 105, 107, 108, 116], "org": [1, 117], "origin": [0, 113], "other": [0, 1, 28, 104, 117], "otherwis": [111, 112, 116], "our": 0, "output": [0, 103, 107], "over": [1, 38, 54, 76, 117], "overload": 0, "p": [4, 5, 12, 13, 14, 15, 17, 38, 54, 76, 84, 85, 100, 114], "packag": [1, 117], "pair": [0, 64, 66, 82, 83, 87, 89, 90, 93, 94, 95, 96, 97, 104, 107, 108, 112], "pair_copula": [92, 112], "pairwis": 92, "par": [10, 25, 26], "parallel": [87, 104], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 64, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 116, 117], "parametr": [5, 7, 18, 27, 61, 64, 100, 111, 112], "parametric_method": [61, 64, 115], "parser": [1, 117], "parsimoni": 66, "particular": [1, 117], "pass": 3, "path": 44, "pc": 112, "pc1": [90, 107, 108], "pc2": [90, 107, 108], "pdf": [0, 16, 84, 85, 99, 100, 111, 112], "percent": 114, "perform": [0, 1, 104, 110, 117], "permut": [29, 34, 45, 50, 72], "pickl": 0, "pipelin": 0, "platform": 0, "pleas": [1, 117], "plot": 112, "plot_typ": 20, "point": [20, 84, 85, 86, 98, 99, 100, 101, 103, 114], "poisson_cdf": 114, "poisson_ppf": 114, "popular": [1, 117], "posit": 27, "possibl": [0, 61, 64], "potenti": 104, "power": 0, "ppf": 114, "pre": 87, "prerequisit": [1, 117], "preselect": [111, 112], "preselect_famili": [61, 64], "present": 64, "prim": [0, 64, 112], "print": [23, 39, 55, 62, 65, 77, 106, 111, 112, 113, 114, 115], "print_result": 115, "prior": [17, 61, 64, 100, 111, 112], "probabl": [6, 17, 61, 64, 100, 103, 111, 112, 116], "problem": 98, "profil": 7, "progress": 64, "project": [0, 1, 116, 117], "prone": 0, "properli": [0, 113], "properti": [61, 64], "propos": 103, "provid": [1, 27, 88, 92, 117], "proxim": [44, 66], "pseudo": [0, 115, 116], "psi0": [17, 61, 64, 100], "psi_0": [17, 100], "public": [1, 117], "put": [33, 49, 71], "pv": [20, 102, 111, 112, 113, 114, 115], "py": [1, 117], "pybind11": 0, "pydot": [1, 117], "pytest": [1, 117], "python": [0, 1, 117], "pyvinecopulib": [3, 7, 8, 9, 10, 11, 20, 21, 30, 31, 32, 33, 34, 38, 46, 47, 48, 49, 50, 54, 61, 64, 68, 69, 70, 71, 72, 76, 87, 88, 89, 90, 91, 92, 93, 94, 102, 104, 111, 112, 113, 114, 115], "pyvinecopulib_ext": 115, "q_t": 100, "qrng": [22, 105, 116], "quadrat": [0, 61, 64], "qualnam": 27, "quantil": 113, "quasi": [22, 86, 103, 105, 116], "question": [1, 117], "r": [0, 1, 14, 15, 28, 29, 31, 32, 33, 34, 38, 43, 44, 45, 47, 48, 49, 50, 54, 59, 66, 69, 70, 71, 72, 76, 81, 90, 91, 98, 108, 112, 116, 117], "random": [0, 22, 38, 54, 76, 86, 98, 102, 103, 105, 109, 113, 114, 115, 116], "randomize_discret": 103, "randomli": [22, 38, 54, 76, 86, 103, 105, 116], "rang": [0, 102, 113, 114, 115], "rank": 116, "read": [1, 10, 31, 47, 69, 90, 103, 117], "real": 116, "realiz": [6, 7, 12, 13, 14, 15, 16, 19, 21, 86, 101, 104], "reason": [0, 66], "recommonmark": [1, 117], "recurs": [1, 98, 117], "refer": [1, 117], "regard": [1, 117], "regular": [38, 54, 76, 104], "relat": 0, "releas": [0, 1, 117], "relev": 103, "remov": 0, "repeat": 115, "replac": 0, "repositori": [1, 117], "repres": [31, 32, 33, 47, 48, 49, 66, 69, 70, 71, 90, 91], "represent": [39, 55, 66, 77], "reproduc": [1, 117], "requir": [1, 6, 7, 12, 13, 14, 15, 16, 19, 21, 86, 98, 101, 104, 117], "resembl": 98, "reshap": 114, "respect": [1, 6, 10, 12, 13, 14, 15, 16, 19, 25, 26, 86, 101, 104, 117], "restrict": [0, 111, 112], "result": 115, "results_bicop": 115, "results_cpp": 115, "results_cpp_tmp": 115, "return": [4, 5, 6, 12, 13, 14, 15, 16, 17, 19, 20, 22, 26, 42, 58, 80, 84, 85, 86, 98, 99, 100, 101, 102, 103, 104, 105, 108, 114, 115, 116], "revamp": 0, "rho": 64, "right": [33, 49, 66, 71], "root": 112, "rosenblatt": [0, 98, 105, 112], "rot": [10, 25, 26], "rotat": [0, 2, 3, 9, 10, 25, 26, 27, 96, 111, 112, 113, 114], "rotationless": 27, "row": [0, 33, 49, 66, 71], "rtd": [1, 117], "ruff": [1, 117], "runtim": [1, 117], "rvine": 88, "rvinestructur": [0, 28, 30, 31, 32, 33, 34, 38, 44, 46, 47, 48, 49, 50, 54, 82, 83, 88, 92], "safe": 0, "said": 66, "same": [66, 87, 116], "sampl": [22, 38, 54, 76, 86, 105, 110, 117], "satisfi": 66, "save": 0, "scale": [113, 116], "scheme": 103, "sci": 116, "scikit": [1, 117], "scrambl": [86, 103, 116], "script": 0, "search": 0, "second": [6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 21, 28, 66, 86, 101, 104, 112], "see": [1, 2, 4, 5, 7, 8, 11, 16, 17, 21, 22, 32, 48, 70, 82, 84, 85, 86, 87, 90, 91, 99, 100, 101, 103, 104, 105, 107, 108, 111, 112, 116, 117], "seed": [0, 22, 38, 54, 76, 86, 102, 103, 105, 111, 112, 113, 114, 115, 116], "select": [0, 3, 4, 5, 8, 61, 64, 83, 84, 85, 86, 87, 99, 100, 101, 112], "select_famili": [64, 87, 104], "select_threshold": 64, "select_trunc_lvl": 64, "selection_criterion": [61, 64], "self": [3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 35, 36, 37, 39, 40, 41, 42, 43, 45, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "send": [1, 117], "separ": 66, "sequenc": [3, 8, 9, 22, 29, 34, 38, 45, 50, 54, 61, 64, 72, 76, 86, 88, 92, 103, 105, 106, 116], "serve_sphinx": [1, 117], "set": [1, 20, 22, 27, 61, 64, 66, 87, 89, 103, 105, 111, 112, 117], "sever": 66, "shall": [33, 34, 49, 50, 64, 71, 72], "shape": [0, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 33, 49, 61, 64, 71, 84, 85, 86, 87, 88, 92, 98, 99, 100, 101, 103, 104, 105, 116], "shorter": [1, 117], "should": [38, 54, 64, 76], "show": [20, 64, 102, 112], "show_trac": 64, "showcas": 111, "siam": 116, "side": [6, 7, 12, 13, 14, 15, 16, 19, 21, 86, 101, 104], "similarli": [1, 98, 103, 117], "simpl": 103, "simpli": [64, 104], "simul": [98, 103, 110, 111, 112, 115, 116, 117], "simulate_uniform": 116, "sinc": [66, 113], "singl": [0, 27], "size": [102, 113, 114, 115], "sleaker": [1, 117], "smaller": [0, 104], "smooth": [61, 64], "so": [64, 86, 104], "sobol": 116, "some": [103, 110, 114, 117], "sourc": 0, "span": 64, "spars": 100, "special": [7, 28, 44], "specif": [7, 9], "specifi": [1, 8, 9, 87, 104, 112, 113, 117], "speedup": 0, "sphinx": [0, 1, 117], "spl": 103, "split": 98, "spring_layout": 102, "sqrt": 100, "stabil": 0, "stand": [1, 117], "standard": [98, 103], "star": 28, "start": [27, 66], "stat": 116, "statist": 104, "std": 0, "still": 103, "store": [66, 111, 112], "str": [0, 3, 8, 9, 10, 11, 20, 25, 26, 31, 32, 41, 42, 47, 48, 57, 58, 61, 64, 69, 70, 79, 80, 88, 90, 91, 92, 102, 107, 108, 114, 116], "string": [0, 2, 3, 8, 9, 10, 23, 25, 26, 39, 55, 62, 65, 67, 77, 83, 106], "struct": 0, "structur": [0, 11, 28, 31, 32, 38, 39, 40, 41, 42, 43, 44, 47, 48, 54, 55, 56, 57, 58, 59, 64, 66, 67, 69, 70, 76, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 98, 102, 103, 104, 107, 108], "strucutr": 112, "student": [2, 7, 9, 27, 61, 64, 111, 112], "studi": [22, 116], "sub": [43, 59, 81, 109], "submodul": [1, 117], "sudo": [1, 117], "suitabl": [1, 117], "sum": 114, "sum_": [16, 99, 100], "summar": [23, 62, 65, 106], "support": [0, 1, 61, 64, 117], "surfac": [20, 111], "switch": 0, "symmetri": [61, 64], "t": [2, 7, 14, 15, 27, 66, 98, 100, 103, 111], "tail": 27, "tau": [7, 18, 24, 27, 64, 97, 104, 112, 113, 114], "tawn": [0, 2, 27, 61, 64], "term": [1, 117], "test": 0, "than": [6, 12, 13, 14, 15, 16, 19, 43, 59, 61, 64, 81, 84, 85, 86, 98, 99, 100, 101, 103, 105, 109], "thei": [0, 27], "theme": [1, 117], "thi": [0, 1, 20, 43, 59, 66, 81, 87, 88, 92, 102, 103, 104, 109, 110, 117], "thread": [61, 64, 84, 85, 86, 87, 98, 99, 100, 101, 103, 105, 111, 112], "three": [26, 27, 102], "three_par": 27, "threshold": [64, 112], "ti": [104, 116], "tic": 115, "ties_method": 116, "time": [1, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 19, 21, 22, 84, 85, 86, 87, 98, 99, 100, 101, 103, 104, 105, 116, 117], "timeit": 115, "tll": [0, 2, 27, 61, 64, 115], "tll_bicop": 115, "to_json": [11, 32, 48, 70, 91], "to_pseudo_ob": [0, 113, 114, 115, 116], "toc": 115, "todo": 115, "tomac": [22, 116], "too": 98, "trace": [64, 112], "transform": [0, 2, 7, 98, 103, 105, 113, 116], "transpos": 113, "treat": 116, "tree": [28, 35, 36, 37, 40, 44, 51, 52, 53, 56, 64, 66, 73, 74, 75, 78, 90, 93, 94, 95, 96, 97, 100, 102, 104, 106, 107, 108, 109, 112, 113, 114], "tree1": [90, 107, 108, 112], "tree2": [90, 107, 108, 112], "tree3": 112, "tree_criterion": 64, "triangl": [33, 49, 71], "triangular": [31, 41, 42, 47, 57, 58, 66, 69, 79, 80, 90, 107, 108], "true": [22, 31, 32, 33, 34, 47, 48, 49, 50, 61, 64, 69, 70, 71, 72, 90, 91, 102, 103, 105, 116], "trunc_lvl": [29, 30, 34, 43, 45, 46, 50, 59, 64, 67, 68, 72, 81, 104, 109], "truncat": [0, 29, 30, 33, 34, 45, 46, 49, 50, 64, 66, 67, 68, 71, 72, 104, 112], "try": [1, 117], "tupl": 20, "two": [2, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 21, 25, 26, 27, 31, 41, 42, 47, 57, 58, 69, 79, 80, 86, 101, 104, 108, 115, 116], "two_par": 27, "type": [0, 2, 3, 7, 8, 9, 10, 19, 20, 21, 25, 26, 27, 83, 86, 88, 92, 101, 104, 111], "typehint": [1, 117], "typo": [38, 54, 76], "u": [4, 5, 6, 12, 13, 14, 15, 16, 17, 19, 84, 85, 86, 98, 99, 100, 101, 102, 103, 111, 112, 113, 114, 115, 116], "u_": [16, 98, 99, 103], "u_1": [12, 13, 14, 15, 98, 103], "u_2": [12, 13, 14, 15, 98, 103], "u_d": [98, 103], "u_disc": 114, "u_disc_mix": 114, "u_sim": 113, "uint64": [33, 49, 71, 88, 92], "un": 0, "under": [1, 117], "underli": 0, "unif": [20, 111], "uniform": [38, 54, 76, 98, 102, 103, 105, 116], "uniqu": 44, "unit": 115, "unspecifi": 104, "unwant": 0, "up": [66, 112], "updat": [64, 104], "upgrad": 0, "upper": [27, 33, 49, 71], "us": [0, 1, 3, 7, 8, 20, 22, 23, 39, 55, 61, 62, 64, 65, 67, 77, 83, 84, 85, 86, 87, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 116, 117], "usag": [20, 102], "usr": [1, 117], "ut": 27, "v": [0, 98, 103], "v_": [98, 103], "v_1": [98, 103], "v_d": [98, 103], "v_k": [98, 103], "valid": [18, 31, 32, 33, 34, 47, 48, 49, 50, 66, 69, 70, 71, 72, 90, 91], "valu": [2, 6, 7, 12, 13, 14, 15, 16, 19, 21, 24, 26, 27, 31, 41, 47, 57, 69, 79, 86, 101, 104, 115], "var_typ": [3, 8, 9, 88, 92, 111, 112, 113, 114], "variabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 21, 25, 26, 28, 29, 34, 38, 44, 45, 50, 54, 66, 72, 76, 83, 84, 85, 86, 87, 88, 89, 92, 98, 99, 100, 101, 102, 103, 104, 110, 112, 113, 116, 117], "variat": [98, 103], "variou": 115, "vars_nam": 102, "vbic": 100, "vc": 102, "vector": [0, 6, 12, 13, 14, 15, 19, 31, 41, 42, 47, 57, 58, 61, 64, 67, 69, 79, 80, 86, 90, 98, 101, 103, 106, 107, 108, 109, 113, 114, 116], "version": [1, 117], "vine": [0, 28, 29, 30, 31, 32, 33, 34, 38, 43, 44, 45, 46, 47, 48, 49, 50, 54, 59, 63, 64, 66, 68, 69, 70, 71, 72, 76, 81, 82, 83, 86, 87, 89, 90, 91, 92, 98, 100, 102, 103, 104, 105, 107, 108, 109, 110], "vinecop": [0, 110, 113, 114, 115, 117], "vinecop_itau": 115, "vinecop_itau_par_method": 115, "vinecop_tl": 115, "vinecopula": [1, 117], "vinecopulib": [1, 117], "visual": [20, 102], "vt": [10, 25, 26], "w": [14, 15, 98], "w_": 103, "w_1": 103, "w_d": 103, "wdm": [1, 104, 117], "we": [111, 112], "weight": [0, 61, 64, 111, 112, 116], "well": [0, 3, 83], "were": 0, "what": 104, "when": [6, 7, 12, 13, 14, 15, 16, 19, 21, 66, 86, 100, 101, 104], "whenev": 0, "where": [4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 19, 21, 28, 44, 84, 85, 86, 87, 98, 99, 100, 101, 103, 104], "whether": [31, 32, 33, 34, 40, 47, 48, 49, 50, 56, 61, 64, 69, 70, 71, 72, 78, 90, 91, 102, 103], "which": [0, 1, 27, 61, 64, 66, 90, 107, 108, 117], "while": [43, 59, 61, 64, 81, 109, 114], "window": 0, "wise": [0, 64, 116], "within": 64, "without": 104, "word": 104, "work": 66, "write": [25, 41, 57, 79, 107], "written": [25, 41, 57, 79], "x": [20, 86, 101, 102, 104, 113, 114, 115, 116], "x_1": [6, 7, 12, 13, 14, 15, 16, 19, 21], "x_2": [6, 7, 12, 13, 14, 15, 16, 19, 21], "x_j": [86, 101], "x_k": [7, 21], "x_poisson": 114, "x_poisson_mix": 114, "x_sim": 113, "xylim": 20, "y": [20, 104, 116], "ye": [111, 112], "yet": 0, "you": [1, 103, 117], "zero": [33, 49, 71], "zip": 115}, "titles": ["Changelog", "pyvinecopulib", "Bicop", "Bicop.__init__", "Bicop.aic", "Bicop.bic", "Bicop.cdf", "Bicop.fit", "Bicop.from_data", "Bicop.from_family", "Bicop.from_file", "Bicop.from_json", "Bicop.hfunc1", "Bicop.hfunc2", "Bicop.hinv1", "Bicop.hinv2", "Bicop.loglik", "Bicop.mbic", "Bicop.parameters_to_tau", "Bicop.pdf", "Bicop.plot", "Bicop.select", "Bicop.simulate", "Bicop.str", "Bicop.tau_to_parameters", "Bicop.to_file", "Bicop.to_json", "BicopFamily", "CVineStructure", "CVineStructure.__init__", "CVineStructure.from_dimension", "CVineStructure.from_file", "CVineStructure.from_json", "CVineStructure.from_matrix", "CVineStructure.from_order", "CVineStructure.min_array", "CVineStructure.needed_hfunc1", "CVineStructure.needed_hfunc2", "CVineStructure.simulate", "CVineStructure.str", "CVineStructure.struct_array", "CVineStructure.to_file", "CVineStructure.to_json", "CVineStructure.truncate", "DVineStructure", "DVineStructure.__init__", "DVineStructure.from_dimension", "DVineStructure.from_file", "DVineStructure.from_json", "DVineStructure.from_matrix", "DVineStructure.from_order", "DVineStructure.min_array", "DVineStructure.needed_hfunc1", "DVineStructure.needed_hfunc2", "DVineStructure.simulate", "DVineStructure.str", "DVineStructure.struct_array", "DVineStructure.to_file", "DVineStructure.to_json", "DVineStructure.truncate", "FitControlsBicop", "FitControlsBicop.__init__", "FitControlsBicop.str", "FitControlsVinecop", "FitControlsVinecop.__init__", "FitControlsVinecop.str", "RVineStructure", "RVineStructure.__init__", "RVineStructure.from_dimension", "RVineStructure.from_file", "RVineStructure.from_json", "RVineStructure.from_matrix", "RVineStructure.from_order", "RVineStructure.min_array", "RVineStructure.needed_hfunc1", "RVineStructure.needed_hfunc2", "RVineStructure.simulate", "RVineStructure.str", "RVineStructure.struct_array", "RVineStructure.to_file", "RVineStructure.to_json", "RVineStructure.truncate", "Vinecop", "Vinecop.__init__", "Vinecop.aic", "Vinecop.bic", "Vinecop.cdf", "Vinecop.fit", "Vinecop.from_data", "Vinecop.from_dimension", "Vinecop.from_file", "Vinecop.from_json", "Vinecop.from_structure", "Vinecop.get_family", "Vinecop.get_pair_copula", "Vinecop.get_parameters", "Vinecop.get_rotation", "Vinecop.get_tau", "Vinecop.inverse_rosenblatt", "Vinecop.loglik", "Vinecop.mbicv", "Vinecop.pdf", "Vinecop.plot", "Vinecop.rosenblatt", "Vinecop.select", "Vinecop.simulate", "Vinecop.str", "Vinecop.to_file", "Vinecop.to_json", "Vinecop.truncate", "Examples", "Introduction to the bivariate copula (<code class=\"docutils literal notranslate\"><span class=\"pre\">Bicop</span></code>) API", "Introduction to the vine copula (<code class=\"docutils literal notranslate\"><span class=\"pre\">Vinecop</span></code>) API", "Fitting a vine copula on dataset and sampling from the model", "Vine copulas for discrete variables", "Benchmarking performance", "API Documentation", "pyvinecopulib"], "titleterms": {"0": 0, "1": 0, "7": 0, "A": 112, "With": [1, 117], "__init__": [3, 29, 45, 61, 64, 67, 83], "aic": [4, 84], "also": [111, 112], "an": 111, "api": [0, 111, 112, 116], "ar": [1, 111, 112, 117], "benchmark": 115, "bic": [5, 85], "bicop": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 111], "bicopfamili": 27, "bivari": [111, 115], "break": 0, "bug": 0, "build": [1, 117], "c": 112, "cdf": [6, 86], "chang": 0, "changelog": 0, "class": 116, "conda": [1, 117], "contact": [1, 117], "continu": 114, "convert": 114, "copula": [1, 111, 112, 113, 114, 115, 117], "creat": 111, "cvinestructur": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "data": [113, 114], "dataset": 113, "differ": [111, 112], "discret": 114, "do": 111, "document": [1, 116, 117], "dummi": 114, "dvinestructur": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "exampl": 110, "famili": [111, 112], "featur": 0, "first": [112, 114], "fit": [7, 87, 111, 112, 113, 114], "fitcontrolsbicop": [60, 61, 62], "fitcontrolsvinecop": [63, 64, 65], "fix": 0, "from": [1, 113, 117], "from_data": [8, 88], "from_dimens": [30, 46, 68, 89], "from_famili": 9, "from_fil": [10, 31, 47, 69, 90], "from_json": [11, 32, 48, 70, 91], "from_matrix": [33, 49, 71], "from_ord": [34, 50, 72], "from_structur": 92, "function": 116, "gaussian": 111, "get_famili": 93, "get_pair_copula": 94, "get_paramet": 95, "get_rot": 96, "get_tau": 97, "hfunc1": 12, "hfunc2": 13, "hinv1": 14, "hinv2": 15, "i": [1, 111, 112, 114, 117], "import": [111, 112, 113, 114, 115], "independ": 111, "instal": [1, 117], "introduct": [1, 111, 112], "inverse_rosenblatt": 98, "known": 112, "librari": [111, 112, 113, 114, 115], "licens": [1, 117], "loglik": [16, 99], "margin": 114, "mbic": 17, "mbicv": 100, "method": 112, "min_arrai": [35, 51, 73], "mix": 114, "model": [111, 113, 114], "needed_hfunc1": [36, 52, 74], "needed_hfunc2": [37, 53, 75], "new": 0, "noth": 112, "observ": 114, "onli": 114, "other": 111, "paramet": 115, "parameters_to_tau": 18, "pdf": [19, 101], "perform": 115, "pip": [1, 117], "plot": [20, 102, 111], "poisson": 114, "pseudo": 114, "pyvinecopulib": [0, 1, 117], "requir": [113, 114, 115], "rosenblatt": 103, "rvinestructur": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "sampl": 113, "select": [21, 104, 111], "set": 115, "showcas": 112, "similarli": 111, "simul": [22, 38, 54, 76, 105, 113, 114], "some": [111, 112, 113], "sourc": [1, 117], "str": [23, 39, 55, 62, 65, 77, 106], "struct_arrai": [40, 56, 78], "structur": 112, "tau_to_paramet": 24, "to_fil": [25, 41, 57, 79, 107], "to_json": [26, 42, 58, 80, 108], "transform": 114, "truncat": [43, 59, 81, 109], "two": [111, 112], "unkown": 111, "variabl": 114, "version": 0, "vine": [1, 112, 113, 114, 115, 117], "vinecop": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112], "vinecopulib": 0, "wai": [111, 112], "what": [1, 117], "when": [111, 112]}})